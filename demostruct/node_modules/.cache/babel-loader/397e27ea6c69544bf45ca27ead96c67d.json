{"ast":null,"code":"var _jsxFileName = \"/home/ad.rapidops.com/jaymin.shah/project/demostruct/src/components/Faculty/ViewAssignment.jsx\";\nimport React, { Component } from 'react';\nimport { EuiModal, EuiSelect, EuiFieldText, EuiModalBody, EuiModalFooter, EuiModalHeader, EuiModalHeaderTitle, EuiOverlayMask, EuiRange, EuiSwitch, EuiCodeBlock, EuiForm, EuiText, EuiFormRow, EuiPage, EuiPageBody, EuiPageSideBar, EuiBadge, EuiHealth, EuiButton, EuiButtonIcon, EuiCheckbox, EuiContextMenuItem, EuiContextMenuPanel, EuiFieldSearch, EuiFlexGroup, EuiFlexItem, EuiIcon, EuiLink, EuiPopover, EuiSpacer, EuiTable, EuiTableBody, EuiTableFooter, EuiTableFooterCell, EuiTableHeader, EuiTableHeaderCell, EuiTableHeaderCellCheckbox, EuiTablePagination, EuiTableRow, EuiTableRowCell, EuiTableRowCellCheckbox, EuiTableSortMobile, EuiTableHeaderMobile } from '@elastic/eui';\nimport { LEFT_ALIGNMENT, RIGHT_ALIGNMENT, Pager, SortableProperties } from '@elastic/eui/lib/services';\nimport { EuiButtonEmpty } from '@elastic/eui'; //import FacultyDashboard from './FacultyDashboard'\n//import { isFunction } from '../../../../../src/services/predicate';\n\nexport class ViewAssignment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeItemsPerPage = itemsPerPage => {\n      this.pager.setItemsPerPage(itemsPerPage);\n      this.setState({\n        itemsPerPage,\n        firstItemIndex: this.pager.getFirstItemIndex(),\n        lastItemIndex: this.pager.getLastItemIndex()\n      });\n    };\n\n    this.onChangePage = pageIndex => {\n      this.pager.goToPageIndex(pageIndex);\n      this.setState({\n        firstItemIndex: this.pager.getFirstItemIndex(),\n        lastItemIndex: this.pager.getLastItemIndex()\n      });\n    };\n\n    this.onSort = prop => {\n      this.sortableProperties.sortOn(prop);\n      this.setState({\n        sortedColumn: prop\n      });\n    };\n\n    this.toggleItem = itemId => {\n      this.setState(previousState => {\n        const newItemIdToSelectedMap = { ...previousState.itemIdToSelectedMap,\n          [itemId]: !previousState.itemIdToSelectedMap[itemId]\n        };\n        return {\n          itemIdToSelectedMap: newItemIdToSelectedMap\n        };\n      });\n    };\n\n    this.toggleAll = () => {\n      const allSelected = this.areAllItemsSelected();\n      const newItemIdToSelectedMap = {};\n      this.items.forEach(item => newItemIdToSelectedMap[item.id] = !allSelected);\n      this.setState({\n        itemIdToSelectedMap: newItemIdToSelectedMap\n      });\n    };\n\n    this.isItemSelected = itemId => {\n      return this.state.itemIdToSelectedMap[itemId];\n    };\n\n    this.areAllItemsSelected = () => {\n      const indexOfUnselectedItem = this.items.findIndex(item => !this.isItemSelected(item.id));\n      return indexOfUnselectedItem === -1;\n    };\n\n    this.areAnyRowsSelected = () => {\n      return Object.keys(this.state.itemIdToSelectedMap).findIndex(id => {\n        return this.state.itemIdToSelectedMap[id];\n      }) !== -1;\n    };\n\n    this.togglePopover = itemId => {\n      this.setState(previousState => {\n        const newItemIdToOpenActionsPopoverMap = { ...previousState.itemIdToOpenActionsPopoverMap,\n          [itemId]: !previousState.itemIdToOpenActionsPopoverMap[itemId]\n        };\n        return {\n          itemIdToOpenActionsPopoverMap: newItemIdToOpenActionsPopoverMap\n        };\n      });\n    };\n\n    this.closePopover = itemId => {\n      // only update the state if this item's popover is open\n      if (this.isPopoverOpen(itemId)) {\n        this.setState(previousState => {\n          const newItemIdToOpenActionsPopoverMap = { ...previousState.itemIdToOpenActionsPopoverMap,\n            [itemId]: false\n          };\n          return {\n            itemIdToOpenActionsPopoverMap: newItemIdToOpenActionsPopoverMap\n          };\n        });\n      }\n    };\n\n    this.isPopoverOpen = itemId => {\n      return this.state.itemIdToOpenActionsPopoverMap[itemId];\n    };\n\n    this.renderSelectAll = mobile => {\n      return React.createElement(EuiCheckbox, {\n        id: \"selectAllCheckbox\",\n        label: mobile ? 'Select all' : null,\n        checked: this.areAllItemsSelected(),\n        onChange: this.toggleAll.bind(this),\n        type: mobile ? null : 'inList',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      });\n    };\n\n    this.getColumnFooter = (column, {\n      items,\n      pagination\n    }) => {\n      if (column.footer === null) {\n        return null;\n      }\n\n      if (column.footer) {\n        // if (isFunction(column.footer)) {\n        //   return column.footer({ items, pagination });\n        // }\n        return column.footer;\n      }\n\n      return undefined;\n    };\n\n    this.onSwitchChange = () => {\n      this.setState({\n        isSwitchChecked: !this.state.isSwitchChecked\n      });\n    };\n\n    this.state = {\n      itemIdToSelectedMap: {},\n      itemIdToOpenActionsPopoverMap: {},\n      sortedColumn: 'title',\n      itemsPerPage: 10,\n      //modal\n      isModalVisible: false,\n      isModal1Visible: false,\n      isSwitchChecked: true\n    }; //pendingModal\n\n    this.closeModal = this.closeModal.bind(this);\n    this.showModal = this.showModal.bind(this); // viewAnswerModal\n\n    this.closeModal1 = this.closeModal1.bind(this);\n    this.showModal1 = this.showModal1.bind(this);\n    this.items = [{\n      id: 0,\n      title: React.createElement(EuiButtonEmpty, {\n        onClick: this.showModal1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Assignment1\"),\n      //type: 'user',\n      dateCreated: 'Tue Dec 28 2016',\n      magnitude: 1,\n      health: React.createElement(EuiButtonEmpty, {\n        onClick: this.showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Pending\") // <EuiHealth color=\"success\">Healthy</EuiHealth>\n\n    }];\n    this.sortableProperties = new SortableProperties([{\n      name: 'title',\n      getValue: item => item.title.toLowerCase(),\n      isAscending: true\n    }, {\n      name: 'dateCreated',\n      getValue: item => item.dateCreated.toLowerCase(),\n      isAscending: true\n    }, {\n      name: 'magnitude',\n      getValue: item => item.magnitude.toLowerCase(),\n      isAscending: true\n    }], this.state.sortedColumn);\n    this.columns = [{\n      id: 'checkbox',\n      isCheckbox: true,\n      textOnly: false,\n      width: '32px'\n    }, {\n      id: 'type',\n      label: '',\n      alignment: LEFT_ALIGNMENT,\n      width: '24px',\n      cellProvider: cell => React.createElement(EuiIcon, {\n        type: cell,\n        size: \"m\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }),\n      mobileOptions: {\n        show: false\n      }\n    }, {\n      id: 'title',\n      label: 'Assignment Title',\n      footer: React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Title\"),\n      alignment: LEFT_ALIGNMENT,\n      isSortable: true,\n      mobileOptions: {\n        show: false\n      }\n    }, {\n      id: 'title_type',\n      label: 'Title',\n      mobileOptions: {\n        only: true,\n        header: false,\n        enlarge: true,\n        fullWidth: true\n      },\n      render: (title, item) => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(EuiIcon, {\n        type: item.type,\n        size: \"m\",\n        style: {\n          verticalAlign: 'text-top'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), ' ', title)\n    }, {\n      id: 'health',\n      label: 'Status',\n      footer: '',\n      alignment: LEFT_ALIGNMENT\n    }, {\n      id: 'dateCreated',\n      label: 'DeadLine',\n      footer: 'Date created',\n      alignment: LEFT_ALIGNMENT,\n      isSortable: true\n    }, // {\n    //   id: 'magnitude',\n    //   label: 'Orders of magnitude',\n    //   footer: ({ items, pagination }) => {\n    //     const { pageIndex, pageSize } = pagination;\n    //     const startIndex = pageIndex * pageSize;\n    //     const pageOfItems = items.slice(\n    //       startIndex,\n    //       Math.min(startIndex + pageSize, items.length)\n    //     );\n    //     return (\n    //       <strong>\n    //         Total: {pageOfItems.reduce((acc, cur) => acc + cur.magnitude, 0)}\n    //       </strong>\n    //     );\n    //   },\n    //   alignment: RIGHT_ALIGNMENT,\n    //   isSortable: true,\n    // },\n    {\n      id: 'actions',\n      label: '',\n      alignment: RIGHT_ALIGNMENT,\n      isActionsPopover: true,\n      width: '32px'\n    }];\n    this.pager = new Pager(this.items.length, this.state.itemsPerPage);\n    this.state.firstItemIndex = this.pager.getFirstItemIndex();\n    this.state.lastItemIndex = this.pager.getLastItemIndex();\n  }\n\n  getTableMobileSortItems() {\n    const items = [];\n    this.columns.forEach(column => {\n      if (column.isCheckbox || !column.isSortable) {\n        return;\n      }\n\n      items.push({\n        name: column.label,\n        key: column.id,\n        onSort: this.onSort.bind(this, column.id),\n        isSorted: this.state.sortedColumn === column.id,\n        isSortAscending: this.sortableProperties.isAscendingByName(column.id)\n      });\n    });\n    return items.length ? items : null;\n  }\n\n  renderHeaderCells() {\n    const headers = [];\n    this.columns.forEach((column, columnIndex) => {\n      if (column.isCheckbox) {\n        headers.push(React.createElement(EuiTableHeaderCellCheckbox, {\n          key: column.id,\n          width: column.width,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          },\n          __self: this\n        }, this.renderSelectAll()));\n      } else {\n        headers.push(React.createElement(EuiTableHeaderCell, {\n          key: column.id,\n          align: this.columns[columnIndex].alignment,\n          width: column.width,\n          onSort: column.isSortable ? this.onSort.bind(this, column.id) : undefined,\n          isSorted: this.state.sortedColumn === column.id,\n          isSortAscending: this.sortableProperties.isAscendingByName(column.id),\n          mobileOptions: column.mobileOptions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }, column.label));\n      }\n    });\n    return headers.length ? headers : null;\n  }\n\n  renderRows() {\n    const renderRow = item => {\n      const cells = this.columns.map(column => {\n        const cell = item[column.id];\n        let child;\n\n        if (column.isCheckbox) {\n          return React.createElement(EuiTableRowCellCheckbox, {\n            key: column.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 390\n            },\n            __self: this\n          }, React.createElement(EuiCheckbox, {\n            id: `${item.id}-checkbox`,\n            checked: this.isItemSelected(item.id),\n            onChange: this.toggleItem.bind(this, item.id),\n            type: \"inList\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 391\n            },\n            __self: this\n          }));\n        }\n\n        if (column.isActionsPopover) {\n          return React.createElement(EuiTableRowCell, {\n            key: column.id,\n            header: column.label,\n            textOnly: false,\n            hasActions: true,\n            align: \"right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 403\n            },\n            __self: this\n          }, React.createElement(EuiPopover, {\n            id: `${item.id}-actions`,\n            button: React.createElement(EuiButtonIcon, {\n              \"aria-label\": \"Actions\",\n              iconType: \"gear\",\n              size: \"s\",\n              color: \"text\",\n              onClick: () => this.togglePopover(item.id),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 412\n              },\n              __self: this\n            }),\n            isOpen: this.isPopoverOpen(item.id),\n            closePopover: () => this.closePopover(item.id),\n            panelPaddingSize: \"none\",\n            anchorPosition: \"leftCenter\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 409\n            },\n            __self: this\n          }, React.createElement(EuiContextMenuPanel, {\n            items: [React.createElement(EuiContextMenuItem, {\n              key: \"A\",\n              icon: \"pencil\",\n              onClick: () => {\n                this.closePopover(item.id);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 426\n              },\n              __self: this\n            }, \"Edit\"), React.createElement(EuiContextMenuItem, {\n              key: \"B\",\n              icon: \"share\",\n              onClick: () => {\n                this.closePopover(item.id);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 434\n              },\n              __self: this\n            }, \"Share\"), React.createElement(EuiContextMenuItem, {\n              key: \"C\",\n              icon: \"trash\",\n              onClick: () => {\n                this.closePopover(item.id);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 442\n              },\n              __self: this\n            }, \"Delete\")],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 424\n            },\n            __self: this\n          })));\n        }\n\n        if (column.render) {\n          const titleText = item.title.truncateText ? item.title.value : item.title;\n          const title = item.title.isLink ? React.createElement(EuiLink, {\n            href: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 462\n            },\n            __self: this\n          }, item.title.value) : titleText;\n          child = column.render(title, item);\n        } else if (column.cellProvider) {\n          child = column.cellProvider(cell);\n        } else if (cell.isLink) {\n          child = React.createElement(EuiLink, {\n            href: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 470\n            },\n            __self: this\n          }, cell.value);\n        } else if (cell.truncateText) {\n          child = cell.value;\n        } else {\n          child = cell;\n        }\n\n        return React.createElement(EuiTableRowCell, {\n          key: column.id,\n          align: column.alignment,\n          truncateText: cell && cell.truncateText,\n          textOnly: cell ? cell.textOnly : true,\n          mobileOptions: {\n            header: column.label,\n            ...column.mobileOptions\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 478\n          },\n          __self: this\n        }, child);\n      });\n      return React.createElement(EuiTableRow, {\n        key: item.id,\n        isSelected: this.isItemSelected(item.id),\n        isSelectable: true,\n        hasActions: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, cells);\n    };\n\n    const rows = [];\n\n    for (let itemIndex = this.state.firstItemIndex; itemIndex <= this.state.lastItemIndex; itemIndex++) {\n      const item = this.items[itemIndex];\n      rows.push(renderRow(item));\n    }\n\n    return rows;\n  }\n\n  renderFooterCells() {\n    const footers = [];\n    const items = this.items;\n    const pagination = {\n      pageIndex: this.pager.getCurrentPageIndex(),\n      pageSize: this.state.itemsPerPage,\n      totalItemCount: this.pager.getTotalPages()\n    };\n    this.columns.forEach(column => {\n      const footer = this.getColumnFooter(column, {\n        items,\n        pagination\n      });\n\n      if (column.mobileOptions && column.mobileOptions.only) {\n        return; // exclude columns that only exist for mobile headers\n      }\n\n      if (footer) {\n        footers.push(React.createElement(EuiTableFooterCell, {\n          key: `footer_${column.id}`,\n          align: column.alignment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 535\n          },\n          __self: this\n        }, footer));\n      } else {\n        footers.push(React.createElement(EuiTableFooterCell, {\n          key: `footer_empty_${footers.length - 1}`,\n          align: column.alignment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 543\n          },\n          __self: this\n        }, undefined));\n      }\n    });\n    return footers;\n  }\n\n  closeModal() {\n    this.setState({\n      isModalVisible: false\n    });\n  }\n\n  showModal() {\n    this.setState({\n      isModalVisible: true\n    });\n  }\n\n  closeModal1() {\n    this.setState({\n      isModal1Visible: false\n    });\n  }\n\n  showModal1() {\n    this.setState({\n      isModal1Visible: true\n    });\n  }\n\n  render() {\n    //modal\n    let modal;\n    let modal1;\n\n    if (this.state.isModal1Visible) {\n      modal1 = React.createElement(EuiOverlayMask, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, React.createElement(EuiModal, {\n        onClose: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, React.createElement(EuiModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, React.createElement(EuiModalHeaderTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, \"Overflow test\")), React.createElement(EuiModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      }, React.createElement(EuiText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, \"KING. Whats he that wishes so? My cousin, Westmorland? No, my fair cousin; If we are mark\\u2019d to die, we are enow To do our country loss; and if to live, The fewer men, the greater share of honour. God\\u2019s will! I pray thee, wish not one man more. By Jove, I am not covetous for gold, Nor care I who doth feed upon my cost; It yearns me not if men my garments wear; Such outward things dwell not in my desires. But if it be a sin to covet honour, I am the most offending soul alive. No, faith, my coz, wish not a man from England. God\\u2019s peace! I would not lose so great an honour As one man more methinks would share from me For the best hope I have. O, do not wish one more! Rather proclaim it, Westmorland, through my host, That he which hath no stomach to this fight, Let him depart; his passport shall be made, And crowns for convoy put into his purse; We would not die in that man\\u2019s company That fears his fellowship to die with us. This day is call\\u2019d the feast of Crispian. He that outlives this day, and comes safe home, Will stand a tip-toe when this day is nam\\u2019d, And rouse him at the name of Crispian. He that shall live this day, and see old age, Will yearly on the vigil feast his neighbours, And say \\u201CTo-morrow is Saint Crispian.\\u201D Then will he strip his sleeve and show his scars, And say \\u201CThese wounds I had on Crispin\\u2019s day.\\u201D Old men forget; yet all shall be forgot, But he\\u2019ll remember, with advantages, What feats he did that day. Then shall our names, Familiar in his mouth as household words\\u2014 Harry the King, Bedford and Exeter, Warwick and Talbot, Salisbury and Gloucester\\u2014 Be in their flowing cups freshly rememb\\u2019red. This story shall the good man teach his son; And Crispin Crispian shall ne\\u2019er go by, From this day to the ending of the world, But we in it shall be remember\\xE8d\\u2014 We few, we happy few, we band of brothers; For he to-day that sheds his blood with me Shall be my brother; be he ne\\u2019er so vile, This day shall gentle his condition; And gentlemen in England now a-bed Shall think themselves accurs\\u2019d they were not here, And hold their manhoods cheap whiles any speaks That fought with us upon Saint Crispin\\u2019s day.\"))), React.createElement(EuiModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }, React.createElement(EuiButtonEmpty, {\n        onClick: this.closeModal1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(EuiButton, {\n        onClick: this.closeModal1,\n        fill: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648\n        },\n        __self: this\n      }, \"Save\"))));\n    }\n\n    const formSample = React.createElement(EuiForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657\n      },\n      __self: this\n    }, React.createElement(EuiFormRow, {\n      label: \"Accept Submission\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }, React.createElement(EuiSelect, {\n      options: [{\n        value: 'theory',\n        text: 'Accepted'\n      }, {\n        value: 'Programming',\n        text: 'Rejected'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659\n      },\n      __self: this\n    })), React.createElement(EuiFormRow, {\n      label: \"Grade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668\n      },\n      __self: this\n    }, React.createElement(EuiSelect, {\n      options: [{\n        value: 'theory',\n        text: 'A'\n      }, {\n        value: 'Programming',\n        text: 'B'\n      }, {\n        value: 'Programming',\n        text: 'C'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669\n      },\n      __self: this\n    })), React.createElement(EuiFormRow, {\n      label: \"Remarks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679\n      },\n      __self: this\n    }, React.createElement(EuiFieldText, {\n      id: \"remark\",\n      placeholder: \"Remarks If any\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680\n      },\n      __self: this\n    })), React.createElement(EuiSpacer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703\n      },\n      __self: this\n    }));\n\n    if (this.state.isModalVisible) {\n      modal = React.createElement(EuiOverlayMask, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715\n        },\n        __self: this\n      }, React.createElement(EuiModal, {\n        onClose: this.closeModal,\n        initialFocus: \"[name=popswitch]\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716\n        },\n        __self: this\n      }, React.createElement(EuiModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717\n        },\n        __self: this\n      }, React.createElement(EuiModalHeaderTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }, \"Review Assignment\")), React.createElement(EuiModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721\n        },\n        __self: this\n      }, formSample), React.createElement(EuiModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723\n        },\n        __self: this\n      }, React.createElement(EuiButtonEmpty, {\n        onClick: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(EuiButton, {\n        onClick: this.closeModal,\n        fill: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726\n        },\n        __self: this\n      }, \"Review\"))));\n    } //modal end\n\n\n    let optionalActionButtons;\n\n    if (this.areAnyRowsSelected() > 0) {\n      optionalActionButtons = React.createElement(EuiFlexItem, {\n        grow: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740\n        },\n        __self: this\n      }, React.createElement(EuiButton, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741\n        },\n        __self: this\n      }, \"Delete selected\"));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746\n      },\n      __self: this\n    }, React.createElement(EuiPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748\n      },\n      __self: this\n    }, React.createElement(EuiPageBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751\n      },\n      __self: this\n    }, React.createElement(EuiFlexGroup, {\n      gutterSize: \"m\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761\n      },\n      __self: this\n    }, optionalActionButtons, React.createElement(EuiFlexItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764\n      },\n      __self: this\n    }, React.createElement(EuiFieldSearch, {\n      fullWidth: true,\n      placeholder: \"Search...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765\n      },\n      __self: this\n    }))), React.createElement(EuiSpacer, {\n      size: \"m\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769\n      },\n      __self: this\n    }), React.createElement(EuiTableHeaderMobile, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771\n      },\n      __self: this\n    }, React.createElement(EuiFlexGroup, {\n      responsive: false,\n      justifyContent: \"spaceBetween\",\n      alignItems: \"baseline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772\n      },\n      __self: this\n    }, React.createElement(EuiFlexItem, {\n      grow: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776\n      },\n      __self: this\n    }, this.renderSelectAll(true)), React.createElement(EuiFlexItem, {\n      grow: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777\n      },\n      __self: this\n    }, React.createElement(EuiTableSortMobile, {\n      items: this.getTableMobileSortItems(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778\n      },\n      __self: this\n    })))), React.createElement(EuiTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783\n      },\n      __self: this\n    }, React.createElement(EuiTableHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784\n      },\n      __self: this\n    }, this.renderHeaderCells()), React.createElement(EuiTableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786\n      },\n      __self: this\n    }, this.renderRows()), React.createElement(EuiTableFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788\n      },\n      __self: this\n    }, this.renderFooterCells())), modal, modal1, React.createElement(EuiSpacer, {\n      size: \"m\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792\n      },\n      __self: this\n    }), React.createElement(EuiTablePagination, {\n      activePage: this.pager.getCurrentPageIndex(),\n      itemsPerPage: this.state.itemsPerPage,\n      itemsPerPageOptions: [5, 10, 20],\n      pageCount: this.pager.getTotalPages(),\n      onChangeItemsPerPage: this.onChangeItemsPerPage,\n      onChangePage: this.onChangePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794\n      },\n      __self: this\n    })))));\n  }\n\n}\nexport default ViewAssignment;","map":{"version":3,"sources":["/home/ad.rapidops.com/jaymin.shah/project/demostruct/src/components/Faculty/ViewAssignment.jsx"],"names":["React","Component","EuiModal","EuiSelect","EuiFieldText","EuiModalBody","EuiModalFooter","EuiModalHeader","EuiModalHeaderTitle","EuiOverlayMask","EuiRange","EuiSwitch","EuiCodeBlock","EuiForm","EuiText","EuiFormRow","EuiPage","EuiPageBody","EuiPageSideBar","EuiBadge","EuiHealth","EuiButton","EuiButtonIcon","EuiCheckbox","EuiContextMenuItem","EuiContextMenuPanel","EuiFieldSearch","EuiFlexGroup","EuiFlexItem","EuiIcon","EuiLink","EuiPopover","EuiSpacer","EuiTable","EuiTableBody","EuiTableFooter","EuiTableFooterCell","EuiTableHeader","EuiTableHeaderCell","EuiTableHeaderCellCheckbox","EuiTablePagination","EuiTableRow","EuiTableRowCell","EuiTableRowCellCheckbox","EuiTableSortMobile","EuiTableHeaderMobile","LEFT_ALIGNMENT","RIGHT_ALIGNMENT","Pager","SortableProperties","EuiButtonEmpty","ViewAssignment","constructor","props","onChangeItemsPerPage","itemsPerPage","pager","setItemsPerPage","setState","firstItemIndex","getFirstItemIndex","lastItemIndex","getLastItemIndex","onChangePage","pageIndex","goToPageIndex","onSort","prop","sortableProperties","sortOn","sortedColumn","toggleItem","itemId","previousState","newItemIdToSelectedMap","itemIdToSelectedMap","toggleAll","allSelected","areAllItemsSelected","items","forEach","item","id","isItemSelected","state","indexOfUnselectedItem","findIndex","areAnyRowsSelected","Object","keys","togglePopover","newItemIdToOpenActionsPopoverMap","itemIdToOpenActionsPopoverMap","closePopover","isPopoverOpen","renderSelectAll","mobile","bind","getColumnFooter","column","pagination","footer","undefined","onSwitchChange","isSwitchChecked","isModalVisible","isModal1Visible","closeModal","showModal","closeModal1","showModal1","title","dateCreated","magnitude","health","name","getValue","toLowerCase","isAscending","columns","isCheckbox","textOnly","width","label","alignment","cellProvider","cell","mobileOptions","show","isSortable","only","header","enlarge","fullWidth","render","type","verticalAlign","isActionsPopover","length","getTableMobileSortItems","push","key","isSorted","isSortAscending","isAscendingByName","renderHeaderCells","headers","columnIndex","renderRows","renderRow","cells","map","child","titleText","truncateText","value","isLink","rows","itemIndex","renderFooterCells","footers","getCurrentPageIndex","pageSize","totalItemCount","getTotalPages","modal","modal1","formSample","text","optionalActionButtons"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  EuiModal,\n  EuiSelect,\n  EuiFieldText,\n  EuiModalBody,\n  EuiModalFooter,\n  EuiModalHeader,\n  EuiModalHeaderTitle,\n  EuiOverlayMask,\n  EuiRange,\n  EuiSwitch,\n  EuiCodeBlock,\n  EuiForm,\n  EuiText,\n  EuiFormRow,\n  EuiPage,\n  EuiPageBody,\n  EuiPageSideBar,\n  EuiBadge,\n  EuiHealth,\n  EuiButton,\n  EuiButtonIcon,\n  EuiCheckbox,\n  EuiContextMenuItem,\n  EuiContextMenuPanel,\n  EuiFieldSearch,\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiIcon,\n  EuiLink,\n  EuiPopover,\n  EuiSpacer,\n  EuiTable,\n  EuiTableBody,\n  EuiTableFooter,\n  EuiTableFooterCell,\n  EuiTableHeader,\n  EuiTableHeaderCell,\n  EuiTableHeaderCellCheckbox,\n  EuiTablePagination,\n  EuiTableRow,\n  EuiTableRowCell,\n  EuiTableRowCellCheckbox,\n  EuiTableSortMobile,\n  EuiTableHeaderMobile,\n} from '@elastic/eui'\nimport {\n  LEFT_ALIGNMENT,\n  RIGHT_ALIGNMENT,\n  Pager,\n  SortableProperties,\n} from '@elastic/eui/lib/services';\n\nimport { EuiButtonEmpty } from '@elastic/eui';\n//import FacultyDashboard from './FacultyDashboard'\n//import { isFunction } from '../../../../../src/services/predicate';\n\n\nexport class ViewAssignment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      itemIdToSelectedMap: {},\n      itemIdToOpenActionsPopoverMap: {},\n      sortedColumn: 'title',\n      itemsPerPage: 10,\n      //modal\n      isModalVisible: false,\n      isModal1Visible: false,\n      isSwitchChecked: true,\n    };\n    //pendingModal\n    this.closeModal = this.closeModal.bind(this);\n    this.showModal = this.showModal.bind(this);\n    // viewAnswerModal\n    this.closeModal1 = this.closeModal1.bind(this);\n    this.showModal1 = this.showModal1.bind(this);\n\n    this.items = [\n      {\n        id: 0,\n        title:\n          <EuiButtonEmpty onClick={this.showModal1}>\n            {/* {modal}  */}\n            Assignment1\n        </EuiButtonEmpty>,\n        //type: 'user',\n        dateCreated: 'Tue Dec 28 2016',\n        magnitude: 1,\n        health: <EuiButtonEmpty onClick={this.showModal}>\n          {/* {modal}  */}\n          Pending\n   </EuiButtonEmpty>,\n        // <EuiHealth color=\"success\">Healthy</EuiHealth>\n      },\n\n    ];\n\n    this.sortableProperties = new SortableProperties(\n      [\n        {\n          name: 'title',\n          getValue: item => item.title.toLowerCase(),\n          isAscending: true,\n        },\n        {\n          name: 'dateCreated',\n          getValue: item => item.dateCreated.toLowerCase(),\n          isAscending: true,\n        },\n        {\n          name: 'magnitude',\n          getValue: item => item.magnitude.toLowerCase(),\n          isAscending: true,\n        },\n      ],\n      this.state.sortedColumn\n    );\n\n    this.columns = [\n      {\n        id: 'checkbox',\n        isCheckbox: true,\n        textOnly: false,\n        width: '32px',\n      },\n      {\n        id: 'type',\n        label: '',\n        alignment: LEFT_ALIGNMENT,\n        width: '24px',\n        cellProvider: cell => <EuiIcon type={cell} size=\"m\" />,\n        mobileOptions: {\n          show: false,\n        },\n      },\n      {\n        id: 'title',\n        label: 'Assignment Title',\n        footer: <em>Title</em>,\n        alignment: LEFT_ALIGNMENT,\n        isSortable: true,\n        mobileOptions: {\n          show: false,\n        },\n      },\n      {\n        id: 'title_type',\n        label: 'Title',\n        mobileOptions: {\n          only: true,\n          header: false,\n          enlarge: true,\n          fullWidth: true,\n        },\n        render: (title, item) => (\n          <span>\n            <EuiIcon\n              type={item.type}\n              size=\"m\"\n              style={{ verticalAlign: 'text-top' }}\n            />{' '}\n            {title}\n          </span>\n        ),\n      },\n      {\n        id: 'health',\n        label: 'Status',\n        footer: '',\n        alignment: LEFT_ALIGNMENT,\n      },\n      {\n        id: 'dateCreated',\n        label: 'DeadLine',\n        footer: 'Date created',\n        alignment: LEFT_ALIGNMENT,\n        isSortable: true,\n      },\n\n      // {\n      //   id: 'magnitude',\n      //   label: 'Orders of magnitude',\n      //   footer: ({ items, pagination }) => {\n      //     const { pageIndex, pageSize } = pagination;\n      //     const startIndex = pageIndex * pageSize;\n      //     const pageOfItems = items.slice(\n      //       startIndex,\n      //       Math.min(startIndex + pageSize, items.length)\n      //     );\n      //     return (\n\n\n      //       <strong>\n      //         Total: {pageOfItems.reduce((acc, cur) => acc + cur.magnitude, 0)}\n      //       </strong>\n      //     );\n      //   },\n      //   alignment: RIGHT_ALIGNMENT,\n      //   isSortable: true,\n      // },\n      {\n        id: 'actions',\n        label: '',\n        alignment: RIGHT_ALIGNMENT,\n        isActionsPopover: true,\n        width: '32px',\n      },\n    ];\n\n    this.pager = new Pager(this.items.length, this.state.itemsPerPage);\n    this.state.firstItemIndex = this.pager.getFirstItemIndex();\n    this.state.lastItemIndex = this.pager.getLastItemIndex();\n  }\n\n  onChangeItemsPerPage = itemsPerPage => {\n    this.pager.setItemsPerPage(itemsPerPage);\n    this.setState({\n      itemsPerPage,\n      firstItemIndex: this.pager.getFirstItemIndex(),\n      lastItemIndex: this.pager.getLastItemIndex(),\n    });\n  };\n\n  onChangePage = pageIndex => {\n    this.pager.goToPageIndex(pageIndex);\n    this.setState({\n      firstItemIndex: this.pager.getFirstItemIndex(),\n      lastItemIndex: this.pager.getLastItemIndex(),\n    });\n  };\n\n  onSort = prop => {\n    this.sortableProperties.sortOn(prop);\n\n    this.setState({\n      sortedColumn: prop,\n    });\n  };\n\n  toggleItem = itemId => {\n    this.setState(previousState => {\n      const newItemIdToSelectedMap = {\n        ...previousState.itemIdToSelectedMap,\n        [itemId]: !previousState.itemIdToSelectedMap[itemId],\n      };\n\n      return {\n        itemIdToSelectedMap: newItemIdToSelectedMap,\n      };\n    });\n  };\n\n  toggleAll = () => {\n    const allSelected = this.areAllItemsSelected();\n    const newItemIdToSelectedMap = {};\n    this.items.forEach(\n      item => (newItemIdToSelectedMap[item.id] = !allSelected)\n    );\n\n    this.setState({\n      itemIdToSelectedMap: newItemIdToSelectedMap,\n    });\n  };\n\n  isItemSelected = itemId => {\n    return this.state.itemIdToSelectedMap[itemId];\n  };\n\n  areAllItemsSelected = () => {\n    const indexOfUnselectedItem = this.items.findIndex(\n      item => !this.isItemSelected(item.id)\n    );\n    return indexOfUnselectedItem === -1;\n  };\n\n  areAnyRowsSelected = () => {\n    return (\n      Object.keys(this.state.itemIdToSelectedMap).findIndex(id => {\n        return this.state.itemIdToSelectedMap[id];\n      }) !== -1\n    );\n  };\n\n  togglePopover = itemId => {\n    this.setState(previousState => {\n      const newItemIdToOpenActionsPopoverMap = {\n        ...previousState.itemIdToOpenActionsPopoverMap,\n        [itemId]: !previousState.itemIdToOpenActionsPopoverMap[itemId],\n      };\n\n      return {\n        itemIdToOpenActionsPopoverMap: newItemIdToOpenActionsPopoverMap,\n      };\n    });\n  };\n\n  closePopover = itemId => {\n    // only update the state if this item's popover is open\n    if (this.isPopoverOpen(itemId)) {\n      this.setState(previousState => {\n        const newItemIdToOpenActionsPopoverMap = {\n          ...previousState.itemIdToOpenActionsPopoverMap,\n          [itemId]: false,\n        };\n\n        return {\n          itemIdToOpenActionsPopoverMap: newItemIdToOpenActionsPopoverMap,\n        };\n      });\n    }\n  };\n\n  isPopoverOpen = itemId => {\n    return this.state.itemIdToOpenActionsPopoverMap[itemId];\n  };\n\n  renderSelectAll = mobile => {\n    return (\n      <EuiCheckbox\n        id=\"selectAllCheckbox\"\n        label={mobile ? 'Select all' : null}\n        checked={this.areAllItemsSelected()}\n        onChange={this.toggleAll.bind(this)}\n        type={mobile ? null : 'inList'}\n      />\n    );\n  };\n\n  getTableMobileSortItems() {\n    const items = [];\n    this.columns.forEach(column => {\n      if (column.isCheckbox || !column.isSortable) {\n        return;\n      }\n      items.push({\n        name: column.label,\n        key: column.id,\n        onSort: this.onSort.bind(this, column.id),\n        isSorted: this.state.sortedColumn === column.id,\n        isSortAscending: this.sortableProperties.isAscendingByName(column.id),\n      });\n    });\n    return items.length ? items : null;\n  }\n\n  renderHeaderCells() {\n    const headers = [];\n\n    this.columns.forEach((column, columnIndex) => {\n      if (column.isCheckbox) {\n        headers.push(\n          <EuiTableHeaderCellCheckbox key={column.id} width={column.width}>\n            {this.renderSelectAll()}\n          </EuiTableHeaderCellCheckbox>\n        );\n      } else {\n        headers.push(\n          <EuiTableHeaderCell\n            key={column.id}\n            align={this.columns[columnIndex].alignment}\n            width={column.width}\n            onSort={\n              column.isSortable ? this.onSort.bind(this, column.id) : undefined\n            }\n            isSorted={this.state.sortedColumn === column.id}\n            isSortAscending={this.sortableProperties.isAscendingByName(\n              column.id\n            )}\n            mobileOptions={column.mobileOptions}>\n            {column.label}\n          </EuiTableHeaderCell>\n        );\n      }\n    });\n    return headers.length ? headers : null;\n  }\n\n  renderRows() {\n    const renderRow = item => {\n      const cells = this.columns.map(column => {\n        const cell = item[column.id];\n\n        let child;\n\n        if (column.isCheckbox) {\n          return (\n            <EuiTableRowCellCheckbox key={column.id}>\n              <EuiCheckbox\n                id={`${item.id}-checkbox`}\n                checked={this.isItemSelected(item.id)}\n                onChange={this.toggleItem.bind(this, item.id)}\n                type=\"inList\"\n              />\n            </EuiTableRowCellCheckbox>\n          );\n        }\n\n        if (column.isActionsPopover) {\n          return (\n            <EuiTableRowCell\n              key={column.id}\n              header={column.label}\n              textOnly={false}\n              hasActions={true}\n              align=\"right\">\n              <EuiPopover\n                id={`${item.id}-actions`}\n                button={\n                  <EuiButtonIcon\n                    aria-label=\"Actions\"\n                    iconType=\"gear\"\n                    size=\"s\"\n                    color=\"text\"\n                    onClick={() => this.togglePopover(item.id)}\n                  />\n                }\n                isOpen={this.isPopoverOpen(item.id)}\n                closePopover={() => this.closePopover(item.id)}\n                panelPaddingSize=\"none\"\n                anchorPosition=\"leftCenter\">\n                <EuiContextMenuPanel\n                  items={[\n                    <EuiContextMenuItem\n                      key=\"A\"\n                      icon=\"pencil\"\n                      onClick={() => {\n                        this.closePopover(item.id);\n                      }}>\n                      Edit\n                    </EuiContextMenuItem>,\n                    <EuiContextMenuItem\n                      key=\"B\"\n                      icon=\"share\"\n                      onClick={() => {\n                        this.closePopover(item.id);\n                      }}>\n                      Share\n                    </EuiContextMenuItem>,\n                    <EuiContextMenuItem\n                      key=\"C\"\n                      icon=\"trash\"\n                      onClick={() => {\n                        this.closePopover(item.id);\n                      }}>\n                      Delete\n                    </EuiContextMenuItem>,\n                  ]}\n                />\n              </EuiPopover>\n            </EuiTableRowCell>\n          );\n        }\n\n        if (column.render) {\n          const titleText = item.title.truncateText\n            ? item.title.value\n            : item.title;\n          const title = item.title.isLink ? (\n            <EuiLink href=\"\">{item.title.value}</EuiLink>\n          ) : (\n              titleText\n            );\n          child = column.render(title, item);\n        } else if (column.cellProvider) {\n          child = column.cellProvider(cell);\n        } else if (cell.isLink) {\n          child = <EuiLink href=\"\">{cell.value}</EuiLink>;\n        } else if (cell.truncateText) {\n          child = cell.value;\n        } else {\n          child = cell;\n        }\n\n        return (\n          <EuiTableRowCell\n            key={column.id}\n            align={column.alignment}\n            truncateText={cell && cell.truncateText}\n            textOnly={cell ? cell.textOnly : true}\n            mobileOptions={{\n              header: column.label,\n              ...column.mobileOptions,\n            }}>\n            {child}\n          </EuiTableRowCell>\n        );\n      });\n\n      return (\n        <EuiTableRow\n          key={item.id}\n          isSelected={this.isItemSelected(item.id)}\n          isSelectable={true}\n          hasActions={true}>\n          {cells}\n        </EuiTableRow>\n      );\n    };\n\n    const rows = [];\n\n    for (\n      let itemIndex = this.state.firstItemIndex;\n      itemIndex <= this.state.lastItemIndex;\n      itemIndex++\n    ) {\n      const item = this.items[itemIndex];\n      rows.push(renderRow(item));\n    }\n\n    return rows;\n  }\n\n  renderFooterCells() {\n    const footers = [];\n\n    const items = this.items;\n    const pagination = {\n      pageIndex: this.pager.getCurrentPageIndex(),\n      pageSize: this.state.itemsPerPage,\n      totalItemCount: this.pager.getTotalPages(),\n    };\n\n    this.columns.forEach(column => {\n      const footer = this.getColumnFooter(column, { items, pagination });\n      if (column.mobileOptions && column.mobileOptions.only) {\n        return; // exclude columns that only exist for mobile headers\n      }\n\n      if (footer) {\n        footers.push(\n          <EuiTableFooterCell\n            key={`footer_${column.id}`}\n            align={column.alignment}>\n            {footer}\n          </EuiTableFooterCell>\n        );\n      } else {\n        footers.push(\n          <EuiTableFooterCell\n            key={`footer_empty_${footers.length - 1}`}\n            align={column.alignment}>\n            {undefined}\n          </EuiTableFooterCell>\n        );\n      }\n    });\n    return footers;\n  }\n\n  getColumnFooter = (column, { items, pagination }) => {\n    if (column.footer === null) {\n      return null;\n    }\n\n    if (column.footer) {\n      // if (isFunction(column.footer)) {\n      //   return column.footer({ items, pagination });\n      // }\n      return column.footer;\n    }\n\n    return undefined;\n  };\n\n  onSwitchChange = () => {\n    this.setState({\n      isSwitchChecked: !this.state.isSwitchChecked,\n    });\n  };\n\n  closeModal() {\n    this.setState({ isModalVisible: false });\n  }\n\n  showModal() {\n    this.setState({ isModalVisible: true });\n  }\n  closeModal1() {\n    this.setState({ isModal1Visible: false });\n  }\n\n  showModal1() {\n    this.setState({ isModal1Visible: true });\n  }\n  render() {\n    //modal\n    let modal;\n    let modal1;\n    if (this.state.isModal1Visible) {\n      modal1 = (\n        <EuiOverlayMask>\n          <EuiModal onClose={this.closeModal}>\n            <EuiModalHeader>\n              <EuiModalHeaderTitle>Overflow test</EuiModalHeaderTitle>\n            </EuiModalHeader>\n\n            <EuiModalBody>\n              <EuiText>\n                <p>\n                  KING. Whats he that wishes so? My cousin, Westmorland? No, my\n                  fair cousin; If we are mark&rsquo;d to die, we are enow To do\n                  our country loss; and if to live, The fewer men, the greater\n                  share of honour. God&rsquo;s will! I pray thee, wish not one\n                  man more. By Jove, I am not covetous for gold, Nor care I who\n                  doth feed upon my cost; It yearns me not if men my garments\n                  wear; Such outward things dwell not in my desires. But if it\n                  be a sin to covet honour, I am the most offending soul alive.\n                  No, faith, my coz, wish not a man from England. God&rsquo;s\n                  peace! I would not lose so great an honour As one man more\n                  methinks would share from me For the best hope I have. O, do\n                  not wish one more! Rather proclaim it, Westmorland, through my\n                  host, That he which hath no stomach to this fight, Let him\n                  depart; his passport shall be made, And crowns for convoy put\n                  into his purse; We would not die in that man&rsquo;s company\n                  That fears his fellowship to die with us. This day is\n                  call&rsquo;d the feast of Crispian. He that outlives this day,\n                  and comes safe home, Will stand a tip-toe when this day is\n                  nam&rsquo;d, And rouse him at the name of Crispian. He that\n                  shall live this day, and see old age, Will yearly on the vigil\n                  feast his neighbours, And say &ldquo;To-morrow is Saint\n                  Crispian.&rdquo; Then will he strip his sleeve and show his\n                  scars, And say &ldquo;These wounds I had on Crispin&rsquo;s\n                  day.&rdquo; Old men forget; yet all shall be forgot, But\n                  he&rsquo;ll remember, with advantages, What feats he did that\n                  day. Then shall our names, Familiar in his mouth as household\n                  words— Harry the King, Bedford and Exeter, Warwick and Talbot,\n                  Salisbury and Gloucester— Be in their flowing cups freshly\n                  rememb&rsquo;red. This story shall the good man teach his son;\n                  And Crispin Crispian shall ne&rsquo;er go by, From this day to\n                  the ending of the world, But we in it shall be rememberèd— We\n                  few, we happy few, we band of brothers; For he to-day that\n                  sheds his blood with me Shall be my brother; be he ne&rsquo;er\n                  so vile, This day shall gentle his condition; And gentlemen in\n                  England now a-bed Shall think themselves accurs&rsquo;d they\n                  were not here, And hold their manhoods cheap whiles any speaks\n                  That fought with us upon Saint Crispin&rsquo;s day.\n                  </p>\n              </EuiText>\n            </EuiModalBody>\n\n            <EuiModalFooter>\n              <EuiButtonEmpty onClick={this.closeModal1}>Cancel</EuiButtonEmpty>\n\n              <EuiButton onClick={this.closeModal1} fill>\n                Save\n                </EuiButton>\n            </EuiModalFooter>\n          </EuiModal>\n        </EuiOverlayMask>\n      );\n    }\n    const formSample = (\n      <EuiForm>\n        <EuiFormRow label=\"Accept Submission\" >\n          <EuiSelect\n            options={[\n              { value: 'theory', text: 'Accepted' },\n              { value: 'Programming', text: 'Rejected' },\n\n            ]}\n\n          />\n        </EuiFormRow>\n        <EuiFormRow label=\"Grade\" >\n          <EuiSelect\n            options={[\n              { value: 'theory', text: 'A' },\n              { value: 'Programming', text: 'B' },\n              { value: 'Programming', text: 'C' },\n\n            ]}\n\n          />\n        </EuiFormRow>\n        <EuiFormRow label=\"Remarks\" >\n          <EuiFieldText id=\"remark\" placeholder=\"Remarks If any\"></EuiFieldText>\n        </EuiFormRow>\n        {/* <EuiSwitch\n              //id={makeId()}\n              name=\"popswitch\"\n              label=\"Isn't this modal form cool?\"\n              checked={this.state.isSwitchChecked}\n              onChange={this.onSwitchChange}\n            /> */}\n\n\n        {/* <EuiFormRow label=\"A text field\">\n            <EuiFieldText name=\"popfirst\" />\n          </EuiFormRow>\n  \n          <EuiFormRow label=\"Range\" helpText=\"Some help text for the range\">\n            <EuiRange min={0} max={100} name=\"poprange\" />\n          </EuiFormRow> */}\n\n        {/* <EuiFormRow label=\"A SuperSelect field\">\n            <SuperSelectComplexExample />\n          </EuiFormRow> */}\n\n        <EuiSpacer />\n\n        {/* <EuiCodeBlock language=\"html\" paddingSize=\"s\" isCopyable>\n            {'<h1>Title</h1>'}\n          </EuiCodeBlock> */}\n      </EuiForm>\n    );\n\n\n\n    if (this.state.isModalVisible) {\n      modal = (\n        <EuiOverlayMask>\n          <EuiModal onClose={this.closeModal} initialFocus=\"[name=popswitch]\">\n            <EuiModalHeader>\n              <EuiModalHeaderTitle>Review Assignment</EuiModalHeaderTitle>\n            </EuiModalHeader>\n\n            <EuiModalBody>{formSample}</EuiModalBody>\n\n            <EuiModalFooter>\n              <EuiButtonEmpty onClick={this.closeModal}>Cancel</EuiButtonEmpty>\n\n              <EuiButton onClick={this.closeModal} fill>\n                Review\n                </EuiButton>\n            </EuiModalFooter>\n          </EuiModal>\n        </EuiOverlayMask>\n      );\n    }\n    //modal end\n\n    let optionalActionButtons;\n\n    if (this.areAnyRowsSelected() > 0) {\n      optionalActionButtons = (\n        <EuiFlexItem grow={false}>\n          <EuiButton color=\"danger\">Delete selected</EuiButton>\n        </EuiFlexItem>\n      );\n    }\n    return (\n      <div>\n\n        <EuiPage>\n\n          <EuiPageBody>\n            <div>\n\n\n              {/* <EuiButton\n          onClick={() => window.location.assign('Addassignment')}\n          iconType=\"createSingleMetricJob\">\n          Add Assignment\n        </EuiButton> */}\n\n\n              <EuiFlexGroup gutterSize=\"m\">\n                {optionalActionButtons}\n\n                <EuiFlexItem>\n                  <EuiFieldSearch fullWidth placeholder=\"Search...\" />\n                </EuiFlexItem>\n              </EuiFlexGroup>\n\n              <EuiSpacer size=\"m\" />\n\n              <EuiTableHeaderMobile>\n                <EuiFlexGroup\n                  responsive={false}\n                  justifyContent=\"spaceBetween\"\n                  alignItems=\"baseline\">\n                  <EuiFlexItem grow={false}>{this.renderSelectAll(true)}</EuiFlexItem>\n                  <EuiFlexItem grow={false}>\n                    <EuiTableSortMobile items={this.getTableMobileSortItems()} />\n                  </EuiFlexItem>\n                </EuiFlexGroup>\n              </EuiTableHeaderMobile>\n\n              <EuiTable>\n                <EuiTableHeader>{this.renderHeaderCells()}</EuiTableHeader>\n\n                <EuiTableBody>{this.renderRows()}</EuiTableBody>\n\n                <EuiTableFooter>{this.renderFooterCells()}</EuiTableFooter>\n              </EuiTable>\n              {modal}\n              {modal1}\n              <EuiSpacer size=\"m\" />\n\n              <EuiTablePagination\n                activePage={this.pager.getCurrentPageIndex()}\n                itemsPerPage={this.state.itemsPerPage}\n                itemsPerPageOptions={[5, 10, 20]}\n                pageCount={this.pager.getTotalPages()}\n                onChangeItemsPerPage={this.onChangeItemsPerPage}\n                onChangePage={this.onChangePage}\n              />\n            </div>\n\n            {/* <FacultyDashboard/> */}\n          </EuiPageBody>\n        </EuiPage>\n      </div>\n    )\n  }\n}\n\nexport default ViewAssignment;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}