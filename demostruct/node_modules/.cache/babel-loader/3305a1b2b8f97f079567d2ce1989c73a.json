{"ast":null,"code":"/**\n * PropType validation that, if the property is present,\n * validates against a proptype and verifies that another property exists\n *\n * example:\n * ExampleComponent.propTypes = {\n *   items: PropTypes.array,\n *   itemId: withRequiredProp(PropTypes.string, 'items', 'itemId is required to extract the ID from an item')\n * }\n *\n * this validator warns if ExampleComponent is passed an `items` prop but not `itemId`\n */\nexport var withRequiredProp = function withRequiredProp(proptype, requiredPropName, messageDescription) {\n  var validator = function validator() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var props = args[0],\n        propName = args[1]; // run the proptype for this property\n\n    var result = proptype.apply(void 0, args); // if the property type checking passed then check for the required prop\n\n    if (result == null) {\n      // if this property was passed, check that the required property also exists\n      if (props[propName] != null && props[requiredPropName] == null) {\n        result = new Error(\"Property \\\"\".concat(propName, \"\\\" was passed without corresponding property \\\"\").concat(requiredPropName, \"\\\"\").concat(messageDescription ? \"; \".concat(messageDescription) : ''));\n      }\n    }\n\n    return result;\n  };\n\n  return validator;\n};","map":{"version":3,"sources":["/home/ad.rapidops.com/jaymin.shah/project/demostruct/node_modules/@elastic/eui/es/utils/prop_types/with_required_prop.js"],"names":["withRequiredProp","proptype","requiredPropName","messageDescription","validator","_len","arguments","length","args","Array","_key","props","propName","result","apply","Error","concat"],"mappings":"AAAA;;;;;;;;;;;;AAYA,OAAO,IAAIA,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,QAA1B,EAAoCC,gBAApC,EAAsDC,kBAAtD,EAA0E;AACtG,MAAIC,SAAS,GAAG,SAASA,SAAT,GAAqB;AACnC,SAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAApC,EAAqDK,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGL,IAA3E,EAAiFK,IAAI,EAArF,EAAyF;AACvFF,MAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACD;;AAED,QAAIC,KAAK,GAAGH,IAAI,CAAC,CAAD,CAAhB;AAAA,QACII,QAAQ,GAAGJ,IAAI,CAAC,CAAD,CADnB,CALmC,CAMX;;AAExB,QAAIK,MAAM,GAAGZ,QAAQ,CAACa,KAAT,CAAe,KAAK,CAApB,EAAuBN,IAAvB,CAAb,CARmC,CAQQ;;AAE3C,QAAIK,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA,UAAIF,KAAK,CAACC,QAAD,CAAL,IAAmB,IAAnB,IAA2BD,KAAK,CAACT,gBAAD,CAAL,IAA2B,IAA1D,EAAgE;AAC9DW,QAAAA,MAAM,GAAG,IAAIE,KAAJ,CAAU,cAAcC,MAAd,CAAqBJ,QAArB,EAA+B,iDAA/B,EAAkFI,MAAlF,CAAyFd,gBAAzF,EAA2G,IAA3G,EAAiHc,MAAjH,CAAwHb,kBAAkB,GAAG,KAAKa,MAAL,CAAYb,kBAAZ,CAAH,GAAqC,EAA/K,CAAV,CAAT;AACD;AACF;;AAED,WAAOU,MAAP;AACD,GAlBD;;AAoBA,SAAOT,SAAP;AACD,CAtBM","sourcesContent":["/**\n * PropType validation that, if the property is present,\n * validates against a proptype and verifies that another property exists\n *\n * example:\n * ExampleComponent.propTypes = {\n *   items: PropTypes.array,\n *   itemId: withRequiredProp(PropTypes.string, 'items', 'itemId is required to extract the ID from an item')\n * }\n *\n * this validator warns if ExampleComponent is passed an `items` prop but not `itemId`\n */\nexport var withRequiredProp = function withRequiredProp(proptype, requiredPropName, messageDescription) {\n  var validator = function validator() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var props = args[0],\n        propName = args[1]; // run the proptype for this property\n\n    var result = proptype.apply(void 0, args); // if the property type checking passed then check for the required prop\n\n    if (result == null) {\n      // if this property was passed, check that the required property also exists\n      if (props[propName] != null && props[requiredPropName] == null) {\n        result = new Error(\"Property \\\"\".concat(propName, \"\\\" was passed without corresponding property \\\"\").concat(requiredPropName, \"\\\"\").concat(messageDescription ? \"; \".concat(messageDescription) : ''));\n      }\n    }\n\n    return result;\n  };\n\n  return validator;\n};"]},"metadata":{},"sourceType":"module"}