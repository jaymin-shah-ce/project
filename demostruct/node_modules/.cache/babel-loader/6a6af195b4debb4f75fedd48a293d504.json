{"ast":null,"code":"import React from 'react';\nimport { IsFilter, IsFilterConfigType } from './is_filter';\nimport { FieldValueSelectionFilter, FieldValueSelectionFilterConfigType } from './field_value_selection_filter';\nimport { FieldValueToggleFilter, FieldValueToggleFilterConfigType } from './field_value_toggle_filter';\nimport { FieldValueToggleGroupFilter, FieldValueToggleGroupFilterConfigType } from './field_value_toggle_group_filter';\nimport PropTypes from 'prop-types';\nexport var createFilter = function createFilter(index, config, query, onChange) {\n  var props = {\n    index: index,\n    config: config,\n    query: query,\n    onChange: onChange\n  };\n\n  switch (config.type) {\n    case 'is':\n      return React.createElement(IsFilter, props);\n\n    case 'field_value_selection':\n      return React.createElement(FieldValueSelectionFilter, props);\n\n    case 'field_value_toggle':\n      return React.createElement(FieldValueToggleFilter, props);\n\n    case 'field_value_toggle_group':\n      return React.createElement(FieldValueToggleGroupFilter, props);\n\n    default:\n      throw new Error(\"Unknown search filter type [\".concat(config.type, \"]\"));\n  }\n};\nexport var FilterConfigType = PropTypes.oneOfType([IsFilterConfigType, FieldValueSelectionFilterConfigType, FieldValueToggleFilterConfigType, FieldValueToggleGroupFilterConfigType]);\ncreateFilter.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"createFilter\"\n};","map":{"version":3,"sources":["/home/ad.rapidops.com/jaymin.shah/project/demostruct/node_modules/@elastic/eui/es/components/search_bar/filters/filters.js"],"names":["React","IsFilter","IsFilterConfigType","FieldValueSelectionFilter","FieldValueSelectionFilterConfigType","FieldValueToggleFilter","FieldValueToggleFilterConfigType","FieldValueToggleGroupFilter","FieldValueToggleGroupFilterConfigType","PropTypes","createFilter","index","config","query","onChange","props","type","createElement","Error","concat","FilterConfigType","oneOfType","__docgenInfo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,kBAAnB,QAA6C,aAA7C;AACA,SAASC,yBAAT,EAAoCC,mCAApC,QAA+E,gCAA/E;AACA,SAASC,sBAAT,EAAiCC,gCAAjC,QAAyE,6BAAzE;AACA,SAASC,2BAAT,EAAsCC,qCAAtC,QAAmF,mCAAnF;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,KAArC,EAA4CC,QAA5C,EAAsD;AAC9E,MAAIC,KAAK,GAAG;AACVJ,IAAAA,KAAK,EAAEA,KADG;AAEVC,IAAAA,MAAM,EAAEA,MAFE;AAGVC,IAAAA,KAAK,EAAEA,KAHG;AAIVC,IAAAA,QAAQ,EAAEA;AAJA,GAAZ;;AAOA,UAAQF,MAAM,CAACI,IAAf;AACE,SAAK,IAAL;AACE,aAAOhB,KAAK,CAACiB,aAAN,CAAoBhB,QAApB,EAA8Bc,KAA9B,CAAP;;AAEF,SAAK,uBAAL;AACE,aAAOf,KAAK,CAACiB,aAAN,CAAoBd,yBAApB,EAA+CY,KAA/C,CAAP;;AAEF,SAAK,oBAAL;AACE,aAAOf,KAAK,CAACiB,aAAN,CAAoBZ,sBAApB,EAA4CU,KAA5C,CAAP;;AAEF,SAAK,0BAAL;AACE,aAAOf,KAAK,CAACiB,aAAN,CAAoBV,2BAApB,EAAiDQ,KAAjD,CAAP;;AAEF;AACE,YAAM,IAAIG,KAAJ,CAAU,+BAA+BC,MAA/B,CAAsCP,MAAM,CAACI,IAA7C,EAAmD,GAAnD,CAAV,CAAN;AAdJ;AAgBD,CAxBM;AAyBP,OAAO,IAAII,gBAAgB,GAAGX,SAAS,CAACY,SAAV,CAAoB,CAACnB,kBAAD,EAAqBE,mCAArB,EAA0DE,gCAA1D,EAA4FE,qCAA5F,CAApB,CAAvB;AACPE,YAAY,CAACY,YAAb,GAA4B;AAC1B,iBAAe,EADW;AAE1B,aAAW,EAFe;AAG1B,iBAAe;AAHW,CAA5B","sourcesContent":["import React from 'react';\nimport { IsFilter, IsFilterConfigType } from './is_filter';\nimport { FieldValueSelectionFilter, FieldValueSelectionFilterConfigType } from './field_value_selection_filter';\nimport { FieldValueToggleFilter, FieldValueToggleFilterConfigType } from './field_value_toggle_filter';\nimport { FieldValueToggleGroupFilter, FieldValueToggleGroupFilterConfigType } from './field_value_toggle_group_filter';\nimport PropTypes from 'prop-types';\nexport var createFilter = function createFilter(index, config, query, onChange) {\n  var props = {\n    index: index,\n    config: config,\n    query: query,\n    onChange: onChange\n  };\n\n  switch (config.type) {\n    case 'is':\n      return React.createElement(IsFilter, props);\n\n    case 'field_value_selection':\n      return React.createElement(FieldValueSelectionFilter, props);\n\n    case 'field_value_toggle':\n      return React.createElement(FieldValueToggleFilter, props);\n\n    case 'field_value_toggle_group':\n      return React.createElement(FieldValueToggleGroupFilter, props);\n\n    default:\n      throw new Error(\"Unknown search filter type [\".concat(config.type, \"]\"));\n  }\n};\nexport var FilterConfigType = PropTypes.oneOfType([IsFilterConfigType, FieldValueSelectionFilterConfigType, FieldValueToggleFilterConfigType, FieldValueToggleGroupFilterConfigType]);\ncreateFilter.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"createFilter\"\n};"]},"metadata":{},"sourceType":"module"}