{"ast":null,"code":"var _jsxFileName = \"/home/ad.rapidops.com/jaymin.shah/project/demostruct/src/components/Faculty/Assignment.jsx\";\nimport React, { Component } from 'react';\nimport { EuiPage, EuiPageBody, EuiPageSideBar, EuiBadge, EuiHealth, EuiButton, EuiButtonIcon, EuiCheckbox, EuiContextMenuItem, EuiContextMenuPanel, EuiFieldSearch, EuiFlexGroup, EuiFlexItem, EuiIcon, EuiLink, EuiPopover, EuiSpacer, EuiTable, EuiTableBody, EuiTableFooter, EuiTableFooterCell, EuiTableHeader, EuiTableHeaderCell, EuiTableHeaderCellCheckbox, EuiTablePagination, EuiTableRow, EuiTableRowCell, EuiTableRowCellCheckbox, EuiTableSortMobile, EuiTableHeaderMobile } from '@elastic/eui';\nimport { LEFT_ALIGNMENT, RIGHT_ALIGNMENT, Pager, SortableProperties } from '@elastic/eui/lib/services';\nimport { EuiButtonEmpty } from '@elastic/eui'; //import FacultyDashboard from './FacultyDashboard'\n//import { isFunction } from '../../../../../src/services/predicate';\n\nexport class Assignment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeItemsPerPage = itemsPerPage => {\n      this.pager.setItemsPerPage(itemsPerPage);\n      this.setState({\n        itemsPerPage,\n        firstItemIndex: this.pager.getFirstItemIndex(),\n        lastItemIndex: this.pager.getLastItemIndex()\n      });\n    };\n\n    this.onChangePage = pageIndex => {\n      this.pager.goToPageIndex(pageIndex);\n      this.setState({\n        firstItemIndex: this.pager.getFirstItemIndex(),\n        lastItemIndex: this.pager.getLastItemIndex()\n      });\n    };\n\n    this.onSort = prop => {\n      this.sortableProperties.sortOn(prop);\n      this.setState({\n        sortedColumn: prop\n      });\n    };\n\n    this.toggleItem = itemId => {\n      this.setState(previousState => {\n        const newItemIdToSelectedMap = { ...previousState.itemIdToSelectedMap,\n          [itemId]: !previousState.itemIdToSelectedMap[itemId]\n        };\n        return {\n          itemIdToSelectedMap: newItemIdToSelectedMap\n        };\n      });\n    };\n\n    this.toggleAll = () => {\n      const allSelected = this.areAllItemsSelected();\n      const newItemIdToSelectedMap = {};\n      this.items.forEach(item => newItemIdToSelectedMap[item.id] = !allSelected);\n      this.setState({\n        itemIdToSelectedMap: newItemIdToSelectedMap\n      });\n    };\n\n    this.isItemSelected = itemId => {\n      return this.state.itemIdToSelectedMap[itemId];\n    };\n\n    this.areAllItemsSelected = () => {\n      const indexOfUnselectedItem = this.items.findIndex(item => !this.isItemSelected(item.id));\n      return indexOfUnselectedItem === -1;\n    };\n\n    this.areAnyRowsSelected = () => {\n      return Object.keys(this.state.itemIdToSelectedMap).findIndex(id => {\n        return this.state.itemIdToSelectedMap[id];\n      }) !== -1;\n    };\n\n    this.togglePopover = itemId => {\n      this.setState(previousState => {\n        const newItemIdToOpenActionsPopoverMap = { ...previousState.itemIdToOpenActionsPopoverMap,\n          [itemId]: !previousState.itemIdToOpenActionsPopoverMap[itemId]\n        };\n        return {\n          itemIdToOpenActionsPopoverMap: newItemIdToOpenActionsPopoverMap\n        };\n      });\n    };\n\n    this.closePopover = itemId => {\n      // only update the state if this item's popover is open\n      if (this.isPopoverOpen(itemId)) {\n        this.setState(previousState => {\n          const newItemIdToOpenActionsPopoverMap = { ...previousState.itemIdToOpenActionsPopoverMap,\n            [itemId]: false\n          };\n          return {\n            itemIdToOpenActionsPopoverMap: newItemIdToOpenActionsPopoverMap\n          };\n        });\n      }\n    };\n\n    this.isPopoverOpen = itemId => {\n      return this.state.itemIdToOpenActionsPopoverMap[itemId];\n    };\n\n    this.renderSelectAll = mobile => {\n      return React.createElement(EuiCheckbox, {\n        id: \"selectAllCheckbox\",\n        label: mobile ? 'Select all' : null,\n        checked: this.areAllItemsSelected(),\n        onChange: this.toggleAll.bind(this),\n        type: mobile ? null : 'inList',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      });\n    };\n\n    this.getColumnFooter = (column, {\n      items,\n      pagination\n    }) => {\n      if (column.footer === null) {\n        return null;\n      }\n\n      if (column.footer) {\n        // if (isFunction(column.footer)) {\n        //   return column.footer({ items, pagination });\n        // }\n        return column.footer;\n      }\n\n      return undefined;\n    };\n\n    this.state = {\n      itemIdToSelectedMap: {},\n      itemIdToOpenActionsPopoverMap: {},\n      sortedColumn: 'title',\n      itemsPerPage: 10\n    };\n    this.items = [{\n      id: 0,\n      title: React.createElement(EuiButtonEmpty, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Assignment1\"),\n      //type: 'user',\n      dateCreated: 'Tue Dec 28 2016',\n      magnitude: 1,\n      health: React.createElement(EuiHealth, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Healthy\")\n    }];\n    this.sortableProperties = new SortableProperties([{\n      name: 'title',\n      getValue: item => item.title.toLowerCase(),\n      isAscending: true\n    }, {\n      name: 'dateCreated',\n      getValue: item => item.dateCreated.toLowerCase(),\n      isAscending: true\n    }, {\n      name: 'magnitude',\n      getValue: item => item.magnitude.toLowerCase(),\n      isAscending: true\n    }], this.state.sortedColumn);\n    this.columns = [{\n      id: 'checkbox',\n      isCheckbox: true,\n      textOnly: false,\n      width: '32px'\n    }, {\n      id: 'type',\n      label: '',\n      alignment: LEFT_ALIGNMENT,\n      width: '24px',\n      cellProvider: cell => React.createElement(EuiIcon, {\n        type: cell,\n        size: \"m\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }),\n      mobileOptions: {\n        show: false\n      }\n    }, {\n      id: 'title',\n      label: 'Assignment Title',\n      footer: React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Title\"),\n      alignment: LEFT_ALIGNMENT,\n      isSortable: true,\n      mobileOptions: {\n        show: false\n      }\n    }, {\n      id: 'title_type',\n      label: 'Title',\n      mobileOptions: {\n        only: true,\n        header: false,\n        enlarge: true,\n        fullWidth: true\n      },\n      render: (title, item) => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(EuiIcon, {\n        type: item.type,\n        size: \"m\",\n        style: {\n          verticalAlign: 'text-top'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), ' ', title)\n    }, {\n      id: 'health',\n      label: 'Status',\n      footer: '',\n      alignment: LEFT_ALIGNMENT\n    }, {\n      id: 'dateCreated',\n      label: 'DeadLine',\n      footer: 'Date created',\n      alignment: LEFT_ALIGNMENT,\n      isSortable: true\n    }, // {\n    //   id: 'magnitude',\n    //   label: 'Orders of magnitude',\n    //   footer: ({ items, pagination }) => {\n    //     const { pageIndex, pageSize } = pagination;\n    //     const startIndex = pageIndex * pageSize;\n    //     const pageOfItems = items.slice(\n    //       startIndex,\n    //       Math.min(startIndex + pageSize, items.length)\n    //     );\n    //     return (\n    //       <strong>\n    //         Total: {pageOfItems.reduce((acc, cur) => acc + cur.magnitude, 0)}\n    //       </strong>\n    //     );\n    //   },\n    //   alignment: RIGHT_ALIGNMENT,\n    //   isSortable: true,\n    // },\n    {\n      id: 'actions',\n      label: '',\n      alignment: RIGHT_ALIGNMENT,\n      isActionsPopover: true,\n      width: '32px'\n    }];\n    this.pager = new Pager(this.items.length, this.state.itemsPerPage);\n    this.state.firstItemIndex = this.pager.getFirstItemIndex();\n    this.state.lastItemIndex = this.pager.getLastItemIndex();\n  }\n\n  getTableMobileSortItems() {\n    const items = [];\n    this.columns.forEach(column => {\n      if (column.isCheckbox || !column.isSortable) {\n        return;\n      }\n\n      items.push({\n        name: column.label,\n        key: column.id,\n        onSort: this.onSort.bind(this, column.id),\n        isSorted: this.state.sortedColumn === column.id,\n        isSortAscending: this.sortableProperties.isAscendingByName(column.id)\n      });\n    });\n    return items.length ? items : null;\n  }\n\n  renderHeaderCells() {\n    const headers = [];\n    this.columns.forEach((column, columnIndex) => {\n      if (column.isCheckbox) {\n        headers.push(React.createElement(EuiTableHeaderCellCheckbox, {\n          key: column.id,\n          width: column.width,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }, this.renderSelectAll()));\n      } else {\n        headers.push(React.createElement(EuiTableHeaderCell, {\n          key: column.id,\n          align: this.columns[columnIndex].alignment,\n          width: column.width,\n          onSort: column.isSortable ? this.onSort.bind(this, column.id) : undefined,\n          isSorted: this.state.sortedColumn === column.id,\n          isSortAscending: this.sortableProperties.isAscendingByName(column.id),\n          mobileOptions: column.mobileOptions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }, column.label));\n      }\n    });\n    return headers.length ? headers : null;\n  }\n\n  renderRows() {\n    const renderRow = item => {\n      const cells = this.columns.map(column => {\n        const cell = item[column.id];\n        let child;\n\n        if (column.isCheckbox) {\n          return React.createElement(EuiTableRowCellCheckbox, {\n            key: column.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 359\n            },\n            __self: this\n          }, React.createElement(EuiCheckbox, {\n            id: `${item.id}-checkbox`,\n            checked: this.isItemSelected(item.id),\n            onChange: this.toggleItem.bind(this, item.id),\n            type: \"inList\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 360\n            },\n            __self: this\n          }));\n        }\n\n        if (column.isActionsPopover) {\n          return React.createElement(EuiTableRowCell, {\n            key: column.id,\n            header: column.label,\n            textOnly: false,\n            hasActions: true,\n            align: \"right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 372\n            },\n            __self: this\n          }, React.createElement(EuiPopover, {\n            id: `${item.id}-actions`,\n            button: React.createElement(EuiButtonIcon, {\n              \"aria-label\": \"Actions\",\n              iconType: \"gear\",\n              size: \"s\",\n              color: \"text\",\n              onClick: () => this.togglePopover(item.id),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 381\n              },\n              __self: this\n            }),\n            isOpen: this.isPopoverOpen(item.id),\n            closePopover: () => this.closePopover(item.id),\n            panelPaddingSize: \"none\",\n            anchorPosition: \"leftCenter\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 378\n            },\n            __self: this\n          }, React.createElement(EuiContextMenuPanel, {\n            items: [React.createElement(EuiContextMenuItem, {\n              key: \"A\",\n              icon: \"pencil\",\n              onClick: () => {\n                this.closePopover(item.id);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 395\n              },\n              __self: this\n            }, \"Edit\"), React.createElement(EuiContextMenuItem, {\n              key: \"B\",\n              icon: \"share\",\n              onClick: () => {\n                this.closePopover(item.id);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 403\n              },\n              __self: this\n            }, \"Share\"), React.createElement(EuiContextMenuItem, {\n              key: \"C\",\n              icon: \"trash\",\n              onClick: () => {\n                this.closePopover(item.id);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 411\n              },\n              __self: this\n            }, \"Delete\")],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 393\n            },\n            __self: this\n          })));\n        }\n\n        if (column.render) {\n          const titleText = item.title.truncateText ? item.title.value : item.title;\n          const title = item.title.isLink ? React.createElement(EuiLink, {\n            href: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 431\n            },\n            __self: this\n          }, item.title.value) : titleText;\n          child = column.render(title, item);\n        } else if (column.cellProvider) {\n          child = column.cellProvider(cell);\n        } else if (cell.isLink) {\n          child = React.createElement(EuiLink, {\n            href: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 439\n            },\n            __self: this\n          }, cell.value);\n        } else if (cell.truncateText) {\n          child = cell.value;\n        } else {\n          child = cell;\n        }\n\n        return React.createElement(EuiTableRowCell, {\n          key: column.id,\n          align: column.alignment,\n          truncateText: cell && cell.truncateText,\n          textOnly: cell ? cell.textOnly : true,\n          mobileOptions: {\n            header: column.label,\n            ...column.mobileOptions\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447\n          },\n          __self: this\n        }, child);\n      });\n      return React.createElement(EuiTableRow, {\n        key: item.id,\n        isSelected: this.isItemSelected(item.id),\n        isSelectable: true,\n        hasActions: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, cells);\n    };\n\n    const rows = [];\n\n    for (let itemIndex = this.state.firstItemIndex; itemIndex <= this.state.lastItemIndex; itemIndex++) {\n      const item = this.items[itemIndex];\n      rows.push(renderRow(item));\n    }\n\n    return rows;\n  }\n\n  renderFooterCells() {\n    const footers = [];\n    const items = this.items;\n    const pagination = {\n      pageIndex: this.pager.getCurrentPageIndex(),\n      pageSize: this.state.itemsPerPage,\n      totalItemCount: this.pager.getTotalPages()\n    };\n    this.columns.forEach(column => {\n      const footer = this.getColumnFooter(column, {\n        items,\n        pagination\n      });\n\n      if (column.mobileOptions && column.mobileOptions.only) {\n        return; // exclude columns that only exist for mobile headers\n      }\n\n      if (footer) {\n        footers.push(React.createElement(EuiTableFooterCell, {\n          key: `footer_${column.id}`,\n          align: column.alignment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 504\n          },\n          __self: this\n        }, footer));\n      } else {\n        footers.push(React.createElement(EuiTableFooterCell, {\n          key: `footer_empty_${footers.length - 1}`,\n          align: column.alignment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 512\n          },\n          __self: this\n        }, undefined));\n      }\n    });\n    return footers;\n  }\n\n  render() {\n    let optionalActionButtons;\n\n    if (this.areAnyRowsSelected() > 0) {\n      optionalActionButtons = React.createElement(EuiFlexItem, {\n        grow: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, React.createElement(EuiButton, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, \"Delete selected\"));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, React.createElement(EuiPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }, React.createElement(EuiPageBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, React.createElement(EuiButton, {\n      onClick: () => window.location.assign('Addassignment'),\n      iconType: \"createSingleMetricJob\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, \"Add Assignment\"), React.createElement(EuiFlexGroup, {\n      gutterSize: \"m\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }, optionalActionButtons, React.createElement(EuiFlexItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, React.createElement(EuiFieldSearch, {\n      fullWidth: true,\n      placeholder: \"Search...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }))), React.createElement(EuiSpacer, {\n      size: \"m\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }), React.createElement(EuiTableHeaderMobile, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, React.createElement(EuiFlexGroup, {\n      responsive: false,\n      justifyContent: \"spaceBetween\",\n      alignItems: \"baseline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, React.createElement(EuiFlexItem, {\n      grow: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }, this.renderSelectAll(true)), React.createElement(EuiFlexItem, {\n      grow: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }, React.createElement(EuiTableSortMobile, {\n      items: this.getTableMobileSortItems(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    })))), React.createElement(EuiTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }, React.createElement(EuiTableHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }, this.renderHeaderCells()), React.createElement(EuiTableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590\n      },\n      __self: this\n    }, this.renderRows()), React.createElement(EuiTableFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }, this.renderFooterCells())), React.createElement(EuiSpacer, {\n      size: \"m\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595\n      },\n      __self: this\n    }), React.createElement(EuiTablePagination, {\n      activePage: this.pager.getCurrentPageIndex(),\n      itemsPerPage: this.state.itemsPerPage,\n      itemsPerPageOptions: [5, 10, 20],\n      pageCount: this.pager.getTotalPages(),\n      onChangeItemsPerPage: this.onChangeItemsPerPage,\n      onChangePage: this.onChangePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    })))));\n  }\n\n}\nexport default Assignment;","map":{"version":3,"sources":["/home/ad.rapidops.com/jaymin.shah/project/demostruct/src/components/Faculty/Assignment.jsx"],"names":["React","Component","EuiPage","EuiPageBody","EuiPageSideBar","EuiBadge","EuiHealth","EuiButton","EuiButtonIcon","EuiCheckbox","EuiContextMenuItem","EuiContextMenuPanel","EuiFieldSearch","EuiFlexGroup","EuiFlexItem","EuiIcon","EuiLink","EuiPopover","EuiSpacer","EuiTable","EuiTableBody","EuiTableFooter","EuiTableFooterCell","EuiTableHeader","EuiTableHeaderCell","EuiTableHeaderCellCheckbox","EuiTablePagination","EuiTableRow","EuiTableRowCell","EuiTableRowCellCheckbox","EuiTableSortMobile","EuiTableHeaderMobile","LEFT_ALIGNMENT","RIGHT_ALIGNMENT","Pager","SortableProperties","EuiButtonEmpty","Assignment","constructor","props","onChangeItemsPerPage","itemsPerPage","pager","setItemsPerPage","setState","firstItemIndex","getFirstItemIndex","lastItemIndex","getLastItemIndex","onChangePage","pageIndex","goToPageIndex","onSort","prop","sortableProperties","sortOn","sortedColumn","toggleItem","itemId","previousState","newItemIdToSelectedMap","itemIdToSelectedMap","toggleAll","allSelected","areAllItemsSelected","items","forEach","item","id","isItemSelected","state","indexOfUnselectedItem","findIndex","areAnyRowsSelected","Object","keys","togglePopover","newItemIdToOpenActionsPopoverMap","itemIdToOpenActionsPopoverMap","closePopover","isPopoverOpen","renderSelectAll","mobile","bind","getColumnFooter","column","pagination","footer","undefined","title","dateCreated","magnitude","health","name","getValue","toLowerCase","isAscending","columns","isCheckbox","textOnly","width","label","alignment","cellProvider","cell","mobileOptions","show","isSortable","only","header","enlarge","fullWidth","render","type","verticalAlign","isActionsPopover","length","getTableMobileSortItems","push","key","isSorted","isSortAscending","isAscendingByName","renderHeaderCells","headers","columnIndex","renderRows","renderRow","cells","map","child","titleText","truncateText","value","isLink","rows","itemIndex","renderFooterCells","footers","getCurrentPageIndex","pageSize","totalItemCount","getTotalPages","optionalActionButtons","window","location","assign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  EuiPage,\n  EuiPageBody,\n  EuiPageSideBar,\n  EuiBadge,\n  EuiHealth,\n  EuiButton,\n  EuiButtonIcon,\n  EuiCheckbox,\n  EuiContextMenuItem,\n  EuiContextMenuPanel,\n  EuiFieldSearch,\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiIcon,\n  EuiLink,\n  EuiPopover,\n  EuiSpacer,\n  EuiTable,\n  EuiTableBody,\n  EuiTableFooter,\n  EuiTableFooterCell,\n  EuiTableHeader,\n  EuiTableHeaderCell,\n  EuiTableHeaderCellCheckbox,\n  EuiTablePagination,\n  EuiTableRow,\n  EuiTableRowCell,\n  EuiTableRowCellCheckbox,\n  EuiTableSortMobile,\n  EuiTableHeaderMobile,\n} from '@elastic/eui'\nimport {\n  LEFT_ALIGNMENT,\n  RIGHT_ALIGNMENT,\n  Pager,\n  SortableProperties,\n} from '@elastic/eui/lib/services';\nimport { EuiButtonEmpty } from '@elastic/eui';\n//import FacultyDashboard from './FacultyDashboard'\n//import { isFunction } from '../../../../../src/services/predicate';\n\nexport class Assignment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      itemIdToSelectedMap: {},\n      itemIdToOpenActionsPopoverMap: {},\n      sortedColumn: 'title',\n      itemsPerPage: 10,\n    };\n\n    this.items = [\n      {\n        id: 0,\n        title:\n          <EuiButtonEmpty>\n            Assignment1\n        </EuiButtonEmpty>,\n        //type: 'user',\n        dateCreated: 'Tue Dec 28 2016',\n        magnitude: 1,\n        health: <EuiHealth color=\"success\">Healthy</EuiHealth>,\n      },\n\n    ];\n\n    this.sortableProperties = new SortableProperties(\n      [\n        {\n          name: 'title',\n          getValue: item => item.title.toLowerCase(),\n          isAscending: true,\n        },\n        {\n          name: 'dateCreated',\n          getValue: item => item.dateCreated.toLowerCase(),\n          isAscending: true,\n        },\n        {\n          name: 'magnitude',\n          getValue: item => item.magnitude.toLowerCase(),\n          isAscending: true,\n        },\n      ],\n      this.state.sortedColumn\n    );\n\n    this.columns = [\n      {\n        id: 'checkbox',\n        isCheckbox: true,\n        textOnly: false,\n        width: '32px',\n      },\n      {\n        id: 'type',\n        label: '',\n        alignment: LEFT_ALIGNMENT,\n        width: '24px',\n        cellProvider: cell => <EuiIcon type={cell} size=\"m\" />,\n        mobileOptions: {\n          show: false,\n        },\n      },\n      {\n        id: 'title',\n        label: 'Assignment Title',\n        footer: <em>Title</em>,\n        alignment: LEFT_ALIGNMENT,\n        isSortable: true,\n        mobileOptions: {\n          show: false,\n        },\n      },\n      {\n        id: 'title_type',\n        label: 'Title',\n        mobileOptions: {\n          only: true,\n          header: false,\n          enlarge: true,\n          fullWidth: true,\n        },\n        render: (title, item) => (\n          <span>\n            <EuiIcon\n              type={item.type}\n              size=\"m\"\n              style={{ verticalAlign: 'text-top' }}\n            />{' '}\n            {title}\n          </span>\n        ),\n      },\n      {\n        id: 'health',\n        label: 'Status',\n        footer: '',\n        alignment: LEFT_ALIGNMENT,\n      },\n      {\n        id: 'dateCreated',\n        label: 'DeadLine',\n        footer: 'Date created',\n        alignment: LEFT_ALIGNMENT,\n        isSortable: true,\n      },\n\n      // {\n      //   id: 'magnitude',\n      //   label: 'Orders of magnitude',\n      //   footer: ({ items, pagination }) => {\n      //     const { pageIndex, pageSize } = pagination;\n      //     const startIndex = pageIndex * pageSize;\n      //     const pageOfItems = items.slice(\n      //       startIndex,\n      //       Math.min(startIndex + pageSize, items.length)\n      //     );\n      //     return (\n\n\n      //       <strong>\n      //         Total: {pageOfItems.reduce((acc, cur) => acc + cur.magnitude, 0)}\n      //       </strong>\n      //     );\n      //   },\n      //   alignment: RIGHT_ALIGNMENT,\n      //   isSortable: true,\n      // },\n      {\n        id: 'actions',\n        label: '',\n        alignment: RIGHT_ALIGNMENT,\n        isActionsPopover: true,\n        width: '32px',\n      },\n    ];\n\n    this.pager = new Pager(this.items.length, this.state.itemsPerPage);\n    this.state.firstItemIndex = this.pager.getFirstItemIndex();\n    this.state.lastItemIndex = this.pager.getLastItemIndex();\n  }\n\n  onChangeItemsPerPage = itemsPerPage => {\n    this.pager.setItemsPerPage(itemsPerPage);\n    this.setState({\n      itemsPerPage,\n      firstItemIndex: this.pager.getFirstItemIndex(),\n      lastItemIndex: this.pager.getLastItemIndex(),\n    });\n  };\n\n  onChangePage = pageIndex => {\n    this.pager.goToPageIndex(pageIndex);\n    this.setState({\n      firstItemIndex: this.pager.getFirstItemIndex(),\n      lastItemIndex: this.pager.getLastItemIndex(),\n    });\n  };\n\n  onSort = prop => {\n    this.sortableProperties.sortOn(prop);\n\n    this.setState({\n      sortedColumn: prop,\n    });\n  };\n\n  toggleItem = itemId => {\n    this.setState(previousState => {\n      const newItemIdToSelectedMap = {\n        ...previousState.itemIdToSelectedMap,\n        [itemId]: !previousState.itemIdToSelectedMap[itemId],\n      };\n\n      return {\n        itemIdToSelectedMap: newItemIdToSelectedMap,\n      };\n    });\n  };\n\n  toggleAll = () => {\n    const allSelected = this.areAllItemsSelected();\n    const newItemIdToSelectedMap = {};\n    this.items.forEach(\n      item => (newItemIdToSelectedMap[item.id] = !allSelected)\n    );\n\n    this.setState({\n      itemIdToSelectedMap: newItemIdToSelectedMap,\n    });\n  };\n\n  isItemSelected = itemId => {\n    return this.state.itemIdToSelectedMap[itemId];\n  };\n\n  areAllItemsSelected = () => {\n    const indexOfUnselectedItem = this.items.findIndex(\n      item => !this.isItemSelected(item.id)\n    );\n    return indexOfUnselectedItem === -1;\n  };\n\n  areAnyRowsSelected = () => {\n    return (\n      Object.keys(this.state.itemIdToSelectedMap).findIndex(id => {\n        return this.state.itemIdToSelectedMap[id];\n      }) !== -1\n    );\n  };\n\n  togglePopover = itemId => {\n    this.setState(previousState => {\n      const newItemIdToOpenActionsPopoverMap = {\n        ...previousState.itemIdToOpenActionsPopoverMap,\n        [itemId]: !previousState.itemIdToOpenActionsPopoverMap[itemId],\n      };\n\n      return {\n        itemIdToOpenActionsPopoverMap: newItemIdToOpenActionsPopoverMap,\n      };\n    });\n  };\n\n  closePopover = itemId => {\n    // only update the state if this item's popover is open\n    if (this.isPopoverOpen(itemId)) {\n      this.setState(previousState => {\n        const newItemIdToOpenActionsPopoverMap = {\n          ...previousState.itemIdToOpenActionsPopoverMap,\n          [itemId]: false,\n        };\n\n        return {\n          itemIdToOpenActionsPopoverMap: newItemIdToOpenActionsPopoverMap,\n        };\n      });\n    }\n  };\n\n  isPopoverOpen = itemId => {\n    return this.state.itemIdToOpenActionsPopoverMap[itemId];\n  };\n\n  renderSelectAll = mobile => {\n    return (\n      <EuiCheckbox\n        id=\"selectAllCheckbox\"\n        label={mobile ? 'Select all' : null}\n        checked={this.areAllItemsSelected()}\n        onChange={this.toggleAll.bind(this)}\n        type={mobile ? null : 'inList'}\n      />\n    );\n  };\n\n  getTableMobileSortItems() {\n    const items = [];\n    this.columns.forEach(column => {\n      if (column.isCheckbox || !column.isSortable) {\n        return;\n      }\n      items.push({\n        name: column.label,\n        key: column.id,\n        onSort: this.onSort.bind(this, column.id),\n        isSorted: this.state.sortedColumn === column.id,\n        isSortAscending: this.sortableProperties.isAscendingByName(column.id),\n      });\n    });\n    return items.length ? items : null;\n  }\n\n  renderHeaderCells() {\n    const headers = [];\n\n    this.columns.forEach((column, columnIndex) => {\n      if (column.isCheckbox) {\n        headers.push(\n          <EuiTableHeaderCellCheckbox key={column.id} width={column.width}>\n            {this.renderSelectAll()}\n          </EuiTableHeaderCellCheckbox>\n        );\n      } else {\n        headers.push(\n          <EuiTableHeaderCell\n            key={column.id}\n            align={this.columns[columnIndex].alignment}\n            width={column.width}\n            onSort={\n              column.isSortable ? this.onSort.bind(this, column.id) : undefined\n            }\n            isSorted={this.state.sortedColumn === column.id}\n            isSortAscending={this.sortableProperties.isAscendingByName(\n              column.id\n            )}\n            mobileOptions={column.mobileOptions}>\n            {column.label}\n          </EuiTableHeaderCell>\n        );\n      }\n    });\n    return headers.length ? headers : null;\n  }\n\n  renderRows() {\n    const renderRow = item => {\n      const cells = this.columns.map(column => {\n        const cell = item[column.id];\n\n        let child;\n\n        if (column.isCheckbox) {\n          return (\n            <EuiTableRowCellCheckbox key={column.id}>\n              <EuiCheckbox\n                id={`${item.id}-checkbox`}\n                checked={this.isItemSelected(item.id)}\n                onChange={this.toggleItem.bind(this, item.id)}\n                type=\"inList\"\n              />\n            </EuiTableRowCellCheckbox>\n          );\n        }\n\n        if (column.isActionsPopover) {\n          return (\n            <EuiTableRowCell\n              key={column.id}\n              header={column.label}\n              textOnly={false}\n              hasActions={true}\n              align=\"right\">\n              <EuiPopover\n                id={`${item.id}-actions`}\n                button={\n                  <EuiButtonIcon\n                    aria-label=\"Actions\"\n                    iconType=\"gear\"\n                    size=\"s\"\n                    color=\"text\"\n                    onClick={() => this.togglePopover(item.id)}\n                  />\n                }\n                isOpen={this.isPopoverOpen(item.id)}\n                closePopover={() => this.closePopover(item.id)}\n                panelPaddingSize=\"none\"\n                anchorPosition=\"leftCenter\">\n                <EuiContextMenuPanel\n                  items={[\n                    <EuiContextMenuItem\n                      key=\"A\"\n                      icon=\"pencil\"\n                      onClick={() => {\n                        this.closePopover(item.id);\n                      }}>\n                      Edit\n                    </EuiContextMenuItem>,\n                    <EuiContextMenuItem\n                      key=\"B\"\n                      icon=\"share\"\n                      onClick={() => {\n                        this.closePopover(item.id);\n                      }}>\n                      Share\n                    </EuiContextMenuItem>,\n                    <EuiContextMenuItem\n                      key=\"C\"\n                      icon=\"trash\"\n                      onClick={() => {\n                        this.closePopover(item.id);\n                      }}>\n                      Delete\n                    </EuiContextMenuItem>,\n                  ]}\n                />\n              </EuiPopover>\n            </EuiTableRowCell>\n          );\n        }\n\n        if (column.render) {\n          const titleText = item.title.truncateText\n            ? item.title.value\n            : item.title;\n          const title = item.title.isLink ? (\n            <EuiLink href=\"\">{item.title.value}</EuiLink>\n          ) : (\n              titleText\n            );\n          child = column.render(title, item);\n        } else if (column.cellProvider) {\n          child = column.cellProvider(cell);\n        } else if (cell.isLink) {\n          child = <EuiLink href=\"\">{cell.value}</EuiLink>;\n        } else if (cell.truncateText) {\n          child = cell.value;\n        } else {\n          child = cell;\n        }\n\n        return (\n          <EuiTableRowCell\n            key={column.id}\n            align={column.alignment}\n            truncateText={cell && cell.truncateText}\n            textOnly={cell ? cell.textOnly : true}\n            mobileOptions={{\n              header: column.label,\n              ...column.mobileOptions,\n            }}>\n            {child}\n          </EuiTableRowCell>\n        );\n      });\n\n      return (\n        <EuiTableRow\n          key={item.id}\n          isSelected={this.isItemSelected(item.id)}\n          isSelectable={true}\n          hasActions={true}>\n          {cells}\n        </EuiTableRow>\n      );\n    };\n\n    const rows = [];\n\n    for (\n      let itemIndex = this.state.firstItemIndex;\n      itemIndex <= this.state.lastItemIndex;\n      itemIndex++\n    ) {\n      const item = this.items[itemIndex];\n      rows.push(renderRow(item));\n    }\n\n    return rows;\n  }\n\n  renderFooterCells() {\n    const footers = [];\n\n    const items = this.items;\n    const pagination = {\n      pageIndex: this.pager.getCurrentPageIndex(),\n      pageSize: this.state.itemsPerPage,\n      totalItemCount: this.pager.getTotalPages(),\n    };\n\n    this.columns.forEach(column => {\n      const footer = this.getColumnFooter(column, { items, pagination });\n      if (column.mobileOptions && column.mobileOptions.only) {\n        return; // exclude columns that only exist for mobile headers\n      }\n\n      if (footer) {\n        footers.push(\n          <EuiTableFooterCell\n            key={`footer_${column.id}`}\n            align={column.alignment}>\n            {footer}\n          </EuiTableFooterCell>\n        );\n      } else {\n        footers.push(\n          <EuiTableFooterCell\n            key={`footer_empty_${footers.length - 1}`}\n            align={column.alignment}>\n            {undefined}\n          </EuiTableFooterCell>\n        );\n      }\n    });\n    return footers;\n  }\n\n  getColumnFooter = (column, { items, pagination }) => {\n    if (column.footer === null) {\n      return null;\n    }\n\n    if (column.footer) {\n      // if (isFunction(column.footer)) {\n      //   return column.footer({ items, pagination });\n      // }\n      return column.footer;\n    }\n\n    return undefined;\n  };\n\n\n  render() {\n    let optionalActionButtons;\n\n    if (this.areAnyRowsSelected() > 0) {\n      optionalActionButtons = (\n        <EuiFlexItem grow={false}>\n          <EuiButton color=\"danger\">Delete selected</EuiButton>\n        </EuiFlexItem>\n      );\n    }\n    return (\n      <div>\n      \n        <EuiPage>\n          \n          <EuiPageBody>\n            <div>\n\n\n              <EuiButton\n                onClick={() => window.location.assign('Addassignment')}\n                iconType=\"createSingleMetricJob\">\n                Add Assignment\n        </EuiButton>\n\n\n              <EuiFlexGroup gutterSize=\"m\">\n                {optionalActionButtons}\n\n                <EuiFlexItem>\n                  <EuiFieldSearch fullWidth placeholder=\"Search...\" />\n                </EuiFlexItem>\n              </EuiFlexGroup>\n\n              <EuiSpacer size=\"m\" />\n\n              <EuiTableHeaderMobile>\n                <EuiFlexGroup\n                  responsive={false}\n                  justifyContent=\"spaceBetween\"\n                  alignItems=\"baseline\">\n                  <EuiFlexItem grow={false}>{this.renderSelectAll(true)}</EuiFlexItem>\n                  <EuiFlexItem grow={false}>\n                    <EuiTableSortMobile items={this.getTableMobileSortItems()} />\n                  </EuiFlexItem>\n                </EuiFlexGroup>\n              </EuiTableHeaderMobile>\n\n              <EuiTable>\n                <EuiTableHeader>{this.renderHeaderCells()}</EuiTableHeader>\n\n                <EuiTableBody>{this.renderRows()}</EuiTableBody>\n\n                <EuiTableFooter>{this.renderFooterCells()}</EuiTableFooter>\n              </EuiTable>\n\n              <EuiSpacer size=\"m\" />\n\n              <EuiTablePagination\n                activePage={this.pager.getCurrentPageIndex()}\n                itemsPerPage={this.state.itemsPerPage}\n                itemsPerPageOptions={[5, 10, 20]}\n                pageCount={this.pager.getTotalPages()}\n                onChangeItemsPerPage={this.onChangeItemsPerPage}\n                onChangePage={this.onChangePage}\n              />\n            </div>\n\n            {/* <FacultyDashboard/> */}\n          </EuiPageBody>\n        </EuiPage>\n      </div>\n    )\n  }\n}\n\nexport default Assignment;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}