{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nvar unitsMap = {\n  ms: {\n    weight: 1,\n    type: 'fixed',\n    base: 1\n  },\n  s: {\n    weight: 2,\n    type: 'fixed',\n    base: 1000\n  },\n  m: {\n    weight: 3,\n    type: 'mixed',\n    base: 1000 * 60\n  },\n  h: {\n    weight: 4,\n    type: 'mixed',\n    base: 1000 * 60 * 60\n  },\n  d: {\n    weight: 5,\n    type: 'mixed',\n    base: 1000 * 60 * 60 * 24\n  },\n  w: {\n    weight: 6,\n    type: 'calendar',\n    base: NaN\n  },\n  M: {\n    weight: 7,\n    type: 'calendar',\n    base: NaN\n  },\n  // q: { weight: 8, type: 'calendar' }, // TODO: moment duration does not support quarter\n  y: {\n    weight: 9,\n    type: 'calendar',\n    base: NaN\n  }\n};\nvar units = Object.keys(unitsMap).sort(function (a, b) {\n  return unitsMap[b].weight - unitsMap[a].weight;\n});\nvar unitsDesc = [].concat(_toConsumableArray(units));\nvar unitsAsc = [].concat(_toConsumableArray(units)).reverse();\n\nvar isDate = function isDate(d) {\n  return Object.prototype.toString.call(d) === '[object Date]';\n};\n\nvar isValidDate = function isValidDate(d) {\n  return isDate(d) && !isNaN(d.valueOf());\n};\n/*\n * This is a simplified version of elasticsearch's date parser.\n * If you pass in a momentjs instance as the third parameter the calculation\n * will be done using this (and its locale settings) instead of the one bundled\n * with this library.\n */\n\n\nfunction parse(text) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$roundUp = _ref.roundUp,\n      roundUp = _ref$roundUp === undefined ? false : _ref$roundUp,\n      _ref$momentInstance = _ref.momentInstance,\n      momentInstance = _ref$momentInstance === undefined ? _moment2.default : _ref$momentInstance,\n      forceNow = _ref.forceNow;\n\n  if (!text) return undefined;\n  if (momentInstance.isMoment(text)) return text;\n  if (isDate(text)) return momentInstance(text);\n\n  if (forceNow !== undefined && !isValidDate(forceNow)) {\n    throw new Error('forceNow must be a valid Date');\n  }\n\n  var time = void 0;\n  var mathString = '';\n  var index = void 0;\n  var parseString = void 0;\n\n  if (text.substring(0, 3) === 'now') {\n    time = momentInstance(forceNow);\n    mathString = text.substring('now'.length);\n  } else {\n    index = text.indexOf('||');\n\n    if (index === -1) {\n      parseString = text;\n      mathString = ''; // nothing else\n    } else {\n      parseString = text.substring(0, index);\n      mathString = text.substring(index + 2);\n    } // We're going to just require ISO8601 timestamps, k?\n\n\n    time = momentInstance(parseString);\n  }\n\n  if (!mathString.length) {\n    return time;\n  }\n\n  return parseDateMath(mathString, time, roundUp);\n}\n\nfunction parseDateMath(mathString, time, roundUp) {\n  var dateTime = time;\n  var len = mathString.length;\n  var i = 0;\n\n  while (i < len) {\n    var c = mathString.charAt(i++);\n    var type = void 0;\n    var num = void 0;\n    var unit = void 0;\n\n    if (c === '/') {\n      type = 0;\n    } else if (c === '+') {\n      type = 1;\n    } else if (c === '-') {\n      type = 2;\n    } else {\n      return;\n    }\n\n    if (isNaN(mathString.charAt(i))) {\n      num = 1;\n    } else if (mathString.length === 2) {\n      num = mathString.charAt(i);\n    } else {\n      var numFrom = i;\n\n      while (!isNaN(mathString.charAt(i))) {\n        i++;\n        if (i >= len) return;\n      }\n\n      num = parseInt(mathString.substring(numFrom, i), 10);\n    }\n\n    if (type === 0) {\n      // rounding is only allowed on whole, single, units (eg M or 1M, not 0.5M or 2M)\n      if (num !== 1) {\n        return;\n      }\n    }\n\n    unit = mathString.charAt(i++); // append additional characters in the unit\n\n    for (var j = i; j < len; j++) {\n      var unitChar = mathString.charAt(i);\n\n      if (/[a-z]/i.test(unitChar)) {\n        unit += unitChar;\n        i++;\n      } else {\n        break;\n      }\n    }\n\n    if (units.indexOf(unit) === -1) {\n      return;\n    } else {\n      if (type === 0) {\n        if (roundUp) dateTime.endOf(unit);else dateTime.startOf(unit);\n      } else if (type === 1) {\n        dateTime.add(num, unit);\n      } else if (type === 2) {\n        dateTime.subtract(num, unit);\n      }\n    }\n  }\n\n  return dateTime;\n}\n\nexports.default = {\n  parse: parse,\n  unitsMap: Object.freeze(unitsMap),\n  units: Object.freeze(units),\n  unitsAsc: Object.freeze(unitsAsc),\n  unitsDesc: Object.freeze(unitsDesc)\n};\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/home/ad.rapidops.com/jaymin.shah/project/demostruct/node_modules/@elastic/datemath/target/index.js"],"names":["Object","defineProperty","exports","value","_moment","require","_moment2","_interopRequireDefault","obj","__esModule","default","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","unitsMap","ms","weight","type","base","s","m","h","d","w","NaN","M","y","units","keys","sort","a","b","unitsDesc","concat","unitsAsc","reverse","isDate","prototype","toString","call","isValidDate","isNaN","valueOf","parse","text","_ref","arguments","undefined","_ref$roundUp","roundUp","_ref$momentInstance","momentInstance","forceNow","isMoment","Error","time","mathString","index","parseString","substring","indexOf","parseDateMath","dateTime","len","c","charAt","num","unit","numFrom","parseInt","j","unitChar","test","endOf","startOf","add","subtract","freeze","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /*\n                                                                                                                                                                                                     * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                     * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                     * this work for additional information regarding copyright\n                                                                                                                                                                                                     * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                     * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                     * not use this file except in compliance with the License.\n                                                                                                                                                                                                     * You may obtain a copy of the License at\n                                                                                                                                                                                                     *\n                                                                                                                                                                                                     *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                     *\n                                                                                                                                                                                                     * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                     * software distributed under the License is distributed on an\n                                                                                                                                                                                                     * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                     * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                     * specific language governing permissions and limitations\n                                                                                                                                                                                                     * under the License.\n                                                                                                                                                                                                     */\n\nvar unitsMap = {\n  ms: { weight: 1, type: 'fixed', base: 1 },\n  s: { weight: 2, type: 'fixed', base: 1000 },\n  m: { weight: 3, type: 'mixed', base: 1000 * 60 },\n  h: { weight: 4, type: 'mixed', base: 1000 * 60 * 60 },\n  d: { weight: 5, type: 'mixed', base: 1000 * 60 * 60 * 24 },\n  w: { weight: 6, type: 'calendar', base: NaN },\n  M: { weight: 7, type: 'calendar', base: NaN },\n  // q: { weight: 8, type: 'calendar' }, // TODO: moment duration does not support quarter\n  y: { weight: 9, type: 'calendar', base: NaN }\n};\nvar units = Object.keys(unitsMap).sort(function (a, b) {\n  return unitsMap[b].weight - unitsMap[a].weight;\n});\nvar unitsDesc = [].concat(_toConsumableArray(units));\nvar unitsAsc = [].concat(_toConsumableArray(units)).reverse();\n\nvar isDate = function isDate(d) {\n  return Object.prototype.toString.call(d) === '[object Date]';\n};\n\nvar isValidDate = function isValidDate(d) {\n  return isDate(d) && !isNaN(d.valueOf());\n};\n\n/*\n * This is a simplified version of elasticsearch's date parser.\n * If you pass in a momentjs instance as the third parameter the calculation\n * will be done using this (and its locale settings) instead of the one bundled\n * with this library.\n */\nfunction parse(text) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$roundUp = _ref.roundUp,\n      roundUp = _ref$roundUp === undefined ? false : _ref$roundUp,\n      _ref$momentInstance = _ref.momentInstance,\n      momentInstance = _ref$momentInstance === undefined ? _moment2.default : _ref$momentInstance,\n      forceNow = _ref.forceNow;\n\n  if (!text) return undefined;\n  if (momentInstance.isMoment(text)) return text;\n  if (isDate(text)) return momentInstance(text);\n  if (forceNow !== undefined && !isValidDate(forceNow)) {\n    throw new Error('forceNow must be a valid Date');\n  }\n\n  var time = void 0;\n  var mathString = '';\n  var index = void 0;\n  var parseString = void 0;\n\n  if (text.substring(0, 3) === 'now') {\n    time = momentInstance(forceNow);\n    mathString = text.substring('now'.length);\n  } else {\n    index = text.indexOf('||');\n    if (index === -1) {\n      parseString = text;\n      mathString = ''; // nothing else\n    } else {\n      parseString = text.substring(0, index);\n      mathString = text.substring(index + 2);\n    }\n    // We're going to just require ISO8601 timestamps, k?\n    time = momentInstance(parseString);\n  }\n\n  if (!mathString.length) {\n    return time;\n  }\n\n  return parseDateMath(mathString, time, roundUp);\n}\n\nfunction parseDateMath(mathString, time, roundUp) {\n  var dateTime = time;\n  var len = mathString.length;\n  var i = 0;\n\n  while (i < len) {\n    var c = mathString.charAt(i++);\n    var type = void 0;\n    var num = void 0;\n    var unit = void 0;\n\n    if (c === '/') {\n      type = 0;\n    } else if (c === '+') {\n      type = 1;\n    } else if (c === '-') {\n      type = 2;\n    } else {\n      return;\n    }\n\n    if (isNaN(mathString.charAt(i))) {\n      num = 1;\n    } else if (mathString.length === 2) {\n      num = mathString.charAt(i);\n    } else {\n      var numFrom = i;\n      while (!isNaN(mathString.charAt(i))) {\n        i++;\n        if (i >= len) return;\n      }\n      num = parseInt(mathString.substring(numFrom, i), 10);\n    }\n\n    if (type === 0) {\n      // rounding is only allowed on whole, single, units (eg M or 1M, not 0.5M or 2M)\n      if (num !== 1) {\n        return;\n      }\n    }\n\n    unit = mathString.charAt(i++);\n\n    // append additional characters in the unit\n    for (var j = i; j < len; j++) {\n      var unitChar = mathString.charAt(i);\n      if (/[a-z]/i.test(unitChar)) {\n        unit += unitChar;\n        i++;\n      } else {\n        break;\n      }\n    }\n\n    if (units.indexOf(unit) === -1) {\n      return;\n    } else {\n      if (type === 0) {\n        if (roundUp) dateTime.endOf(unit);else dateTime.startOf(unit);\n      } else if (type === 1) {\n        dateTime.add(num, unit);\n      } else if (type === 2) {\n        dateTime.subtract(num, unit);\n      }\n    }\n  }\n\n  return dateTime;\n}\n\nexports.default = {\n  parse: parse,\n  unitsMap: Object.freeze(unitsMap),\n  units: Object.freeze(units),\n  unitsAsc: Object.freeze(unitsAsc),\n  unitsDesc: Object.freeze(unitsDesc)\n};\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}