{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { keysOf } from '../common';\nimport { getSecureRelForTarget } from '../../services';\nimport { EuiText } from '../text';\nimport { EuiTitle } from '../title';\nimport { EuiBetaBadge } from '../badge/beta_badge';\nimport { EuiCardSelect, euiCardSelectableColor } from './card_select';\nimport makeId from '../form/form_row/make_id';\nvar textAlignToClassNameMap = {\n  left: 'euiCard--leftAligned',\n  center: 'euiCard--centerAligned',\n  right: 'euiCard--rightAligned'\n};\nexport var ALIGNMENTS = keysOf(textAlignToClassNameMap);\nvar layoutToClassNameMap = {\n  vertical: '',\n  horizontal: 'euiCard--horizontal'\n};\nexport var LAYOUT_ALIGNMENTS = keysOf(layoutToClassNameMap);\nvar displayToClassNameMap = {\n  panel: '',\n  plain: 'euiCard--plain'\n};\nexport var DISPLAYS = keysOf(displayToClassNameMap);\nexport var EuiCard = function EuiCard(_ref) {\n  var className = _ref.className,\n      description = _ref.description,\n      isDisabled = _ref.isDisabled,\n      title = _ref.title,\n      _ref$titleElement = _ref.titleElement,\n      titleElement = _ref$titleElement === void 0 ? 'span' : _ref$titleElement,\n      _ref$titleSize = _ref.titleSize,\n      titleSize = _ref$titleSize === void 0 ? 's' : _ref$titleSize,\n      icon = _ref.icon,\n      image = _ref.image,\n      children = _ref.children,\n      footer = _ref.footer,\n      onClick = _ref.onClick,\n      href = _ref.href,\n      rel = _ref.rel,\n      target = _ref.target,\n      _ref$textAlign = _ref.textAlign,\n      textAlign = _ref$textAlign === void 0 ? 'center' : _ref$textAlign,\n      betaBadgeLabel = _ref.betaBadgeLabel,\n      betaBadgeTooltipContent = _ref.betaBadgeTooltipContent,\n      betaBadgeTitle = _ref.betaBadgeTitle,\n      _ref$layout = _ref.layout,\n      layout = _ref$layout === void 0 ? 'vertical' : _ref$layout,\n      selectable = _ref.selectable,\n      _ref$display = _ref.display,\n      display = _ref$display === void 0 ? 'panel' : _ref$display,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"description\", \"isDisabled\", \"title\", \"titleElement\", \"titleSize\", \"icon\", \"image\", \"children\", \"footer\", \"onClick\", \"href\", \"rel\", \"target\", \"textAlign\", \"betaBadgeLabel\", \"betaBadgeTooltipContent\", \"betaBadgeTitle\", \"layout\", \"selectable\", \"display\"]);\n  /**\n   * For a11y, we simulate the same click that's provided on the title when clicking the whole card\n   * without having to make the whole card a button or anchor tag.\n   * *Card Accessibility: The redundant click event https://inclusive-components.design/cards/*\n   */\n\n\n  var link = null;\n\n  var outerOnClick = function outerOnClick(e) {\n    if (link && link !== e.target) {\n      link.click();\n    }\n  };\n\n  if (layout === 'horizontal') {\n    if (image || footer) {\n      throw new Error(\"EuiCard: layout = horizontal' cannot be used in conjunction with 'image', 'footer', or 'textAlign'.\");\n    }\n  }\n\n  var selectableColorClass = selectable ? \"euiCard--isSelectable--\".concat(euiCardSelectableColor(selectable.color, selectable.isSelected)) : undefined;\n  var classes = classNames('euiCard', displayToClassNameMap[display], textAlignToClassNameMap[textAlign], layoutToClassNameMap[layout], {\n    'euiCard--isClickable': onClick || href || selectable && !selectable.isDisabled,\n    'euiCard--hasBetaBadge': betaBadgeLabel,\n    'euiCard--hasIcon': icon,\n    'euiCard--hasChildren': children,\n    'euiCard--isSelectable': selectable,\n    'euiCard-isSelected': selectable && selectable.isSelected,\n    'euiCard-isDisabled': isDisabled\n  }, selectableColorClass, className);\n  var ariaId = makeId();\n  /**\n   * Top area containing image, icon or both\n   */\n\n  var imageNode;\n\n  if (image && layout === 'vertical') {\n    imageNode = React.createElement(\"img\", {\n      className: \"euiCard__image\",\n      src: image,\n      alt: \"\"\n    });\n  }\n\n  var iconNode;\n\n  if (icon) {\n    iconNode = React.cloneElement(icon, {\n      className: classNames(icon.props.className, 'euiCard__icon')\n    });\n  }\n\n  var optionalCardTop;\n\n  if (imageNode || iconNode) {\n    optionalCardTop = React.createElement(\"div\", {\n      className: \"euiCard__top\"\n    }, imageNode, iconNode);\n  }\n  /**\n   * Optional EuiBetaBadge\n   */\n\n\n  var optionalBetaBadge;\n  var optionalBetaBadgeID = '';\n\n  if (betaBadgeLabel) {\n    optionalBetaBadgeID = \"\".concat(ariaId, \"BetaBadge\");\n    optionalBetaBadge = React.createElement(\"span\", {\n      className: \"euiCard__betaBadgeWrapper\"\n    }, React.createElement(EuiBetaBadge, {\n      id: optionalBetaBadgeID,\n      label: betaBadgeLabel,\n      title: betaBadgeTitle,\n      tooltipContent: betaBadgeTooltipContent,\n      className: \"euiCard__betaBadge\"\n    }));\n  }\n  /**\n   * Optional selectable button\n   */\n\n\n  if (selectable && isDisabled && selectable.isDisabled === undefined) {\n    selectable.isDisabled = isDisabled;\n  }\n\n  var optionalSelectButton;\n\n  if (selectable) {\n    optionalSelectButton = React.createElement(EuiCardSelect, _extends({\n      \"aria-describedby\": \"\".concat(ariaId, \"Title \").concat(ariaId, \"Description\")\n    }, selectable, {\n      buttonRef: function buttonRef(node) {\n        link = node;\n      }\n    }));\n  }\n  /**\n   * Wraps the title with the link (<a>) or button.\n   * This makes the title element a11y friendly and gets described by its content if its interactable.\n   */\n\n\n  var theTitle;\n\n  if (!isDisabled && href) {\n    theTitle = React.createElement(\"a\", {\n      className: \"euiCard__titleAnchor\",\n      onClick: onClick,\n      href: href,\n      target: target,\n      \"aria-describedby\": \"\".concat(ariaId, \"Description\"),\n      rel: getSecureRelForTarget({\n        href: href,\n        target: target,\n        rel: rel\n      }),\n      ref: function ref(node) {\n        link = node;\n      }\n    }, title);\n  } else if (isDisabled || onClick) {\n    theTitle = React.createElement(\"button\", {\n      className: \"euiCard__titleButton\",\n      onClick: onClick,\n      disabled: isDisabled,\n      \"aria-describedby\": \"\".concat(optionalBetaBadgeID, \" \").concat(ariaId, \"Description\"),\n      ref: function ref(node) {\n        link = node;\n      }\n    }, title);\n  } else {\n    theTitle = title;\n  }\n  /**\n   * Convert titleElement to a capital TitleElement\n   */\n\n\n  var TitleElement = titleElement;\n  return React.createElement(\"div\", _extends({\n    className: classes,\n    onClick: outerOnClick\n  }, rest), optionalCardTop, React.createElement(\"div\", {\n    className: \"euiCard__content\"\n  }, React.createElement(EuiTitle, {\n    id: \"\".concat(ariaId, \"Title\"),\n    className: \"euiCard__title\",\n    size: titleSize\n  }, React.createElement(TitleElement, null, theTitle)), React.createElement(EuiText, {\n    id: \"\".concat(ariaId, \"Description\"),\n    size: \"s\",\n    className: \"euiCard__description\"\n  }, React.createElement(\"p\", null, description)), children), optionalBetaBadge, layout === 'vertical' && footer && React.createElement(\"div\", {\n    className: \"euiCard__footer\"\n  }, footer), optionalSelectButton);\n};\nEuiCard.propTypes = {\n  /**\n     * Card's are required to have at least a title and description\n     */\n  title: PropTypes.any.isRequired,\n\n  /**\n     * Determines the title's heading element\n     */\n  titleElement: PropTypes.oneOf([\"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"span\"]),\n\n  /**\n     * Determines the title's size, matching that of EuiTitle.\n     * Though, card titles can't be too large or small relative to the description text.\n     */\n  titleSize: PropTypes.oneOf([\"s\", \"xs\"]),\n\n  /**\n     * Card's are required to have at least a title and description\n     */\n  description: PropTypes.any.isRequired,\n\n  /**\n     * Requires a <EuiIcon> node\n     */\n  icon: PropTypes.element,\n\n  /**\n     * Accepts a url in string form\n     */\n  image: PropTypes.string,\n\n  /**\n     * Content to be rendered between the description and the footer\n     */\n  children: PropTypes.node,\n\n  /**\n     * Accepts any combination of elements\n     */\n  footer: PropTypes.node,\n\n  /**\n     * Use only if you want to forego a button in the footer and make the whole card clickable\n     */\n  onClick: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.func.isRequired]),\n  isDisabled: PropTypes.bool,\n  href: PropTypes.string,\n  target: PropTypes.string,\n  rel: PropTypes.string,\n\n  /**\n     * Changes alignment of the title and description\n     */\n  textAlign: PropTypes.oneOf([\"left\", \"center\", \"right\"]),\n\n  /**\n     * Change to \"horizontal\" if you need the icon to be left of the content\n     */\n  layout: PropTypes.oneOf([\"vertical\", \"horizontal\"]),\n\n  /**\n     * Add a badge to the card to label it as \"Beta\" or other non-GA state\n     */\n  betaBadgeLabel: PropTypes.string,\n\n  /**\n     * Add a description to the beta badge (will appear in a tooltip)\n     */\n  betaBadgeTooltipContent: PropTypes.node,\n\n  /**\n     * Optional title will be supplied as tooltip title or title attribute otherwise the label will be used\n     */\n  betaBadgeTitle: PropTypes.string,\n\n  /**\n     * Adds a button to the bottom of the card to allow for in-place selection\n     */\n  selectable: PropTypes.shape({\n    href: PropTypes.string,\n    onClick: PropTypes.func,\n\n    /**\n       * Is in the selected state\n       */\n    isSelected: PropTypes.bool,\n    isDisabled: PropTypes.bool\n  }),\n\n  /**\n     * Visual display of the card. Display as 'panel' or 'plain'.\n     * Selectable cards will always display as 'panel'.\n     */\n  display: PropTypes.oneOf([\"panel\", \"plain\"])\n};\nEuiCard.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiCard\",\n  \"props\": {\n    \"titleElement\": {\n      \"defaultValue\": {\n        \"value\": \"'span'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"h2\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"h3\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"h4\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"h5\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"h6\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"span\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Determines the title's heading element\"\n    },\n    \"titleSize\": {\n      \"defaultValue\": {\n        \"value\": \"'s'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"s\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"xs\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Determines the title's size, matching that of EuiTitle.\\nThough, card titles can't be too large or small relative to the description text.\"\n    },\n    \"textAlign\": {\n      \"defaultValue\": {\n        \"value\": \"'center'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"left\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"center\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"right\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Changes alignment of the title and description\"\n    },\n    \"layout\": {\n      \"defaultValue\": {\n        \"value\": \"'vertical'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"vertical\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"horizontal\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Change to \\\"horizontal\\\" if you need the icon to be left of the content\"\n    },\n    \"display\": {\n      \"defaultValue\": {\n        \"value\": \"'panel'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"panel\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"plain\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Visual display of the card. Display as 'panel' or 'plain'.\\nSelectable cards will always display as 'panel'.\"\n    },\n    \"title\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": true,\n      \"description\": \"Card's are required to have at least a title and description\"\n    },\n    \"description\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": true,\n      \"description\": \"Card's are required to have at least a title and description\"\n    },\n    \"icon\": {\n      \"type\": {\n        \"name\": \"element\"\n      },\n      \"required\": false,\n      \"description\": \"Requires a <EuiIcon> node\"\n    },\n    \"image\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Accepts a url in string form\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Content to be rendered between the description and the footer\"\n    },\n    \"footer\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Accepts any combination of elements\"\n    },\n    \"onClick\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"func\"\n        }, {\n          \"name\": \"func\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Use only if you want to forego a button in the footer and make the whole card clickable\"\n    },\n    \"isDisabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"href\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"target\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"rel\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"betaBadgeLabel\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Add a badge to the card to label it as \\\"Beta\\\" or other non-GA state\"\n    },\n    \"betaBadgeTooltipContent\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Add a description to the beta badge (will appear in a tooltip)\"\n    },\n    \"betaBadgeTitle\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Optional title will be supplied as tooltip title or title attribute otherwise the label will be used\"\n    },\n    \"selectable\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"href\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"onClick\": {\n            \"name\": \"func\",\n            \"required\": false\n          },\n          \"isSelected\": {\n            \"name\": \"bool\",\n            \"description\": \"Is in the selected state\",\n            \"required\": false\n          },\n          \"isDisabled\": {\n            \"name\": \"bool\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"Adds a button to the bottom of the card to allow for in-place selection\"\n    }\n  }\n};","map":{"version":3,"sources":["/home/ad.rapidops.com/jaymin.shah/project/demostruct/node_modules/@elastic/eui/es/components/card/card.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","React","PropTypes","classNames","keysOf","getSecureRelForTarget","EuiText","EuiTitle","EuiBetaBadge","EuiCardSelect","euiCardSelectableColor","makeId","textAlignToClassNameMap","left","center","right","ALIGNMENTS","layoutToClassNameMap","vertical","horizontal","LAYOUT_ALIGNMENTS","displayToClassNameMap","panel","plain","DISPLAYS","EuiCard","_ref","className","description","isDisabled","title","_ref$titleElement","titleElement","_ref$titleSize","titleSize","icon","image","children","footer","onClick","href","rel","_ref$textAlign","textAlign","betaBadgeLabel","betaBadgeTooltipContent","betaBadgeTitle","_ref$layout","layout","selectable","_ref$display","display","rest","link","outerOnClick","e","click","Error","selectableColorClass","concat","color","isSelected","undefined","classes","ariaId","imageNode","createElement","src","alt","iconNode","cloneElement","props","optionalCardTop","optionalBetaBadge","optionalBetaBadgeID","id","label","tooltipContent","optionalSelectButton","buttonRef","node","theTitle","ref","disabled","TitleElement","size","propTypes","any","isRequired","oneOf","element","string","oneOfType","func","bool","shape","__docgenInfo"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { keysOf } from '../common';\nimport { getSecureRelForTarget } from '../../services';\nimport { EuiText } from '../text';\nimport { EuiTitle } from '../title';\nimport { EuiBetaBadge } from '../badge/beta_badge';\nimport { EuiCardSelect, euiCardSelectableColor } from './card_select';\nimport makeId from '../form/form_row/make_id';\nvar textAlignToClassNameMap = {\n  left: 'euiCard--leftAligned',\n  center: 'euiCard--centerAligned',\n  right: 'euiCard--rightAligned'\n};\nexport var ALIGNMENTS = keysOf(textAlignToClassNameMap);\nvar layoutToClassNameMap = {\n  vertical: '',\n  horizontal: 'euiCard--horizontal'\n};\nexport var LAYOUT_ALIGNMENTS = keysOf(layoutToClassNameMap);\nvar displayToClassNameMap = {\n  panel: '',\n  plain: 'euiCard--plain'\n};\nexport var DISPLAYS = keysOf(displayToClassNameMap);\nexport var EuiCard = function EuiCard(_ref) {\n  var className = _ref.className,\n      description = _ref.description,\n      isDisabled = _ref.isDisabled,\n      title = _ref.title,\n      _ref$titleElement = _ref.titleElement,\n      titleElement = _ref$titleElement === void 0 ? 'span' : _ref$titleElement,\n      _ref$titleSize = _ref.titleSize,\n      titleSize = _ref$titleSize === void 0 ? 's' : _ref$titleSize,\n      icon = _ref.icon,\n      image = _ref.image,\n      children = _ref.children,\n      footer = _ref.footer,\n      onClick = _ref.onClick,\n      href = _ref.href,\n      rel = _ref.rel,\n      target = _ref.target,\n      _ref$textAlign = _ref.textAlign,\n      textAlign = _ref$textAlign === void 0 ? 'center' : _ref$textAlign,\n      betaBadgeLabel = _ref.betaBadgeLabel,\n      betaBadgeTooltipContent = _ref.betaBadgeTooltipContent,\n      betaBadgeTitle = _ref.betaBadgeTitle,\n      _ref$layout = _ref.layout,\n      layout = _ref$layout === void 0 ? 'vertical' : _ref$layout,\n      selectable = _ref.selectable,\n      _ref$display = _ref.display,\n      display = _ref$display === void 0 ? 'panel' : _ref$display,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"description\", \"isDisabled\", \"title\", \"titleElement\", \"titleSize\", \"icon\", \"image\", \"children\", \"footer\", \"onClick\", \"href\", \"rel\", \"target\", \"textAlign\", \"betaBadgeLabel\", \"betaBadgeTooltipContent\", \"betaBadgeTitle\", \"layout\", \"selectable\", \"display\"]);\n\n  /**\n   * For a11y, we simulate the same click that's provided on the title when clicking the whole card\n   * without having to make the whole card a button or anchor tag.\n   * *Card Accessibility: The redundant click event https://inclusive-components.design/cards/*\n   */\n  var link = null;\n\n  var outerOnClick = function outerOnClick(e) {\n    if (link && link !== e.target) {\n      link.click();\n    }\n  };\n\n  if (layout === 'horizontal') {\n    if (image || footer) {\n      throw new Error(\"EuiCard: layout = horizontal' cannot be used in conjunction with 'image', 'footer', or 'textAlign'.\");\n    }\n  }\n\n  var selectableColorClass = selectable ? \"euiCard--isSelectable--\".concat(euiCardSelectableColor(selectable.color, selectable.isSelected)) : undefined;\n  var classes = classNames('euiCard', displayToClassNameMap[display], textAlignToClassNameMap[textAlign], layoutToClassNameMap[layout], {\n    'euiCard--isClickable': onClick || href || selectable && !selectable.isDisabled,\n    'euiCard--hasBetaBadge': betaBadgeLabel,\n    'euiCard--hasIcon': icon,\n    'euiCard--hasChildren': children,\n    'euiCard--isSelectable': selectable,\n    'euiCard-isSelected': selectable && selectable.isSelected,\n    'euiCard-isDisabled': isDisabled\n  }, selectableColorClass, className);\n  var ariaId = makeId();\n  /**\n   * Top area containing image, icon or both\n   */\n\n  var imageNode;\n\n  if (image && layout === 'vertical') {\n    imageNode = React.createElement(\"img\", {\n      className: \"euiCard__image\",\n      src: image,\n      alt: \"\"\n    });\n  }\n\n  var iconNode;\n\n  if (icon) {\n    iconNode = React.cloneElement(icon, {\n      className: classNames(icon.props.className, 'euiCard__icon')\n    });\n  }\n\n  var optionalCardTop;\n\n  if (imageNode || iconNode) {\n    optionalCardTop = React.createElement(\"div\", {\n      className: \"euiCard__top\"\n    }, imageNode, iconNode);\n  }\n  /**\n   * Optional EuiBetaBadge\n   */\n\n\n  var optionalBetaBadge;\n  var optionalBetaBadgeID = '';\n\n  if (betaBadgeLabel) {\n    optionalBetaBadgeID = \"\".concat(ariaId, \"BetaBadge\");\n    optionalBetaBadge = React.createElement(\"span\", {\n      className: \"euiCard__betaBadgeWrapper\"\n    }, React.createElement(EuiBetaBadge, {\n      id: optionalBetaBadgeID,\n      label: betaBadgeLabel,\n      title: betaBadgeTitle,\n      tooltipContent: betaBadgeTooltipContent,\n      className: \"euiCard__betaBadge\"\n    }));\n  }\n  /**\n   * Optional selectable button\n   */\n\n\n  if (selectable && isDisabled && selectable.isDisabled === undefined) {\n    selectable.isDisabled = isDisabled;\n  }\n\n  var optionalSelectButton;\n\n  if (selectable) {\n    optionalSelectButton = React.createElement(EuiCardSelect, _extends({\n      \"aria-describedby\": \"\".concat(ariaId, \"Title \").concat(ariaId, \"Description\")\n    }, selectable, {\n      buttonRef: function buttonRef(node) {\n        link = node;\n      }\n    }));\n  }\n  /**\n   * Wraps the title with the link (<a>) or button.\n   * This makes the title element a11y friendly and gets described by its content if its interactable.\n   */\n\n\n  var theTitle;\n\n  if (!isDisabled && href) {\n    theTitle = React.createElement(\"a\", {\n      className: \"euiCard__titleAnchor\",\n      onClick: onClick,\n      href: href,\n      target: target,\n      \"aria-describedby\": \"\".concat(ariaId, \"Description\"),\n      rel: getSecureRelForTarget({\n        href: href,\n        target: target,\n        rel: rel\n      }),\n      ref: function ref(node) {\n        link = node;\n      }\n    }, title);\n  } else if (isDisabled || onClick) {\n    theTitle = React.createElement(\"button\", {\n      className: \"euiCard__titleButton\",\n      onClick: onClick,\n      disabled: isDisabled,\n      \"aria-describedby\": \"\".concat(optionalBetaBadgeID, \" \").concat(ariaId, \"Description\"),\n      ref: function ref(node) {\n        link = node;\n      }\n    }, title);\n  } else {\n    theTitle = title;\n  }\n  /**\n   * Convert titleElement to a capital TitleElement\n   */\n\n\n  var TitleElement = titleElement;\n  return React.createElement(\"div\", _extends({\n    className: classes,\n    onClick: outerOnClick\n  }, rest), optionalCardTop, React.createElement(\"div\", {\n    className: \"euiCard__content\"\n  }, React.createElement(EuiTitle, {\n    id: \"\".concat(ariaId, \"Title\"),\n    className: \"euiCard__title\",\n    size: titleSize\n  }, React.createElement(TitleElement, null, theTitle)), React.createElement(EuiText, {\n    id: \"\".concat(ariaId, \"Description\"),\n    size: \"s\",\n    className: \"euiCard__description\"\n  }, React.createElement(\"p\", null, description)), children), optionalBetaBadge, layout === 'vertical' && footer && React.createElement(\"div\", {\n    className: \"euiCard__footer\"\n  }, footer), optionalSelectButton);\n};\nEuiCard.propTypes = {\n  /**\n     * Card's are required to have at least a title and description\n     */\n  title: PropTypes.any.isRequired,\n\n  /**\n     * Determines the title's heading element\n     */\n  titleElement: PropTypes.oneOf([\"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"span\"]),\n\n  /**\n     * Determines the title's size, matching that of EuiTitle.\n     * Though, card titles can't be too large or small relative to the description text.\n     */\n  titleSize: PropTypes.oneOf([\"s\", \"xs\"]),\n\n  /**\n     * Card's are required to have at least a title and description\n     */\n  description: PropTypes.any.isRequired,\n\n  /**\n     * Requires a <EuiIcon> node\n     */\n  icon: PropTypes.element,\n\n  /**\n     * Accepts a url in string form\n     */\n  image: PropTypes.string,\n\n  /**\n     * Content to be rendered between the description and the footer\n     */\n  children: PropTypes.node,\n\n  /**\n     * Accepts any combination of elements\n     */\n  footer: PropTypes.node,\n\n  /**\n     * Use only if you want to forego a button in the footer and make the whole card clickable\n     */\n  onClick: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.func.isRequired]),\n  isDisabled: PropTypes.bool,\n  href: PropTypes.string,\n  target: PropTypes.string,\n  rel: PropTypes.string,\n\n  /**\n     * Changes alignment of the title and description\n     */\n  textAlign: PropTypes.oneOf([\"left\", \"center\", \"right\"]),\n\n  /**\n     * Change to \"horizontal\" if you need the icon to be left of the content\n     */\n  layout: PropTypes.oneOf([\"vertical\", \"horizontal\"]),\n\n  /**\n     * Add a badge to the card to label it as \"Beta\" or other non-GA state\n     */\n  betaBadgeLabel: PropTypes.string,\n\n  /**\n     * Add a description to the beta badge (will appear in a tooltip)\n     */\n  betaBadgeTooltipContent: PropTypes.node,\n\n  /**\n     * Optional title will be supplied as tooltip title or title attribute otherwise the label will be used\n     */\n  betaBadgeTitle: PropTypes.string,\n\n  /**\n     * Adds a button to the bottom of the card to allow for in-place selection\n     */\n  selectable: PropTypes.shape({\n    href: PropTypes.string,\n    onClick: PropTypes.func,\n\n    /**\n       * Is in the selected state\n       */\n    isSelected: PropTypes.bool,\n    isDisabled: PropTypes.bool\n  }),\n\n  /**\n     * Visual display of the card. Display as 'panel' or 'plain'.\n     * Selectable cards will always display as 'panel'.\n     */\n  display: PropTypes.oneOf([\"panel\", \"plain\"])\n};\nEuiCard.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiCard\",\n  \"props\": {\n    \"titleElement\": {\n      \"defaultValue\": {\n        \"value\": \"'span'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"h2\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"h3\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"h4\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"h5\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"h6\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"span\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Determines the title's heading element\"\n    },\n    \"titleSize\": {\n      \"defaultValue\": {\n        \"value\": \"'s'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"s\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"xs\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Determines the title's size, matching that of EuiTitle.\\nThough, card titles can't be too large or small relative to the description text.\"\n    },\n    \"textAlign\": {\n      \"defaultValue\": {\n        \"value\": \"'center'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"left\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"center\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"right\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Changes alignment of the title and description\"\n    },\n    \"layout\": {\n      \"defaultValue\": {\n        \"value\": \"'vertical'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"vertical\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"horizontal\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Change to \\\"horizontal\\\" if you need the icon to be left of the content\"\n    },\n    \"display\": {\n      \"defaultValue\": {\n        \"value\": \"'panel'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"panel\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"plain\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Visual display of the card. Display as 'panel' or 'plain'.\\nSelectable cards will always display as 'panel'.\"\n    },\n    \"title\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": true,\n      \"description\": \"Card's are required to have at least a title and description\"\n    },\n    \"description\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": true,\n      \"description\": \"Card's are required to have at least a title and description\"\n    },\n    \"icon\": {\n      \"type\": {\n        \"name\": \"element\"\n      },\n      \"required\": false,\n      \"description\": \"Requires a <EuiIcon> node\"\n    },\n    \"image\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Accepts a url in string form\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Content to be rendered between the description and the footer\"\n    },\n    \"footer\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Accepts any combination of elements\"\n    },\n    \"onClick\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"func\"\n        }, {\n          \"name\": \"func\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Use only if you want to forego a button in the footer and make the whole card clickable\"\n    },\n    \"isDisabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"href\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"target\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"rel\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"betaBadgeLabel\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Add a badge to the card to label it as \\\"Beta\\\" or other non-GA state\"\n    },\n    \"betaBadgeTooltipContent\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Add a description to the beta badge (will appear in a tooltip)\"\n    },\n    \"betaBadgeTitle\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Optional title will be supplied as tooltip title or title attribute otherwise the label will be used\"\n    },\n    \"selectable\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"href\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"onClick\": {\n            \"name\": \"func\",\n            \"required\": false\n          },\n          \"isSelected\": {\n            \"name\": \"bool\",\n            \"description\": \"Is in the selected state\",\n            \"required\": false\n          },\n          \"isDisabled\": {\n            \"name\": \"bool\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"Adds a button to the bottom of the card to allow for in-place selection\"\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}