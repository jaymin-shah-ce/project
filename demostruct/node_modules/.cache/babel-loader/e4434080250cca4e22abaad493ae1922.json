{"ast":null,"code":"function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { forwardRef, useRef, useEffect, useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport classnames from 'classnames';\nimport tabbable from 'tabbable';\nimport { EuiDataGridColumnResizer } from './data_grid_column_resizer';\nimport { htmlIdGenerator } from '../../services/accessibility';\nimport { EuiScreenReaderOnly } from '../accessibility';\nimport { keyCodes } from '../../services';\n\nvar EuiDataGridHeaderCell = function EuiDataGridHeaderCell(props) {\n  var column = props.column,\n      index = props.index,\n      columnWidths = props.columnWidths,\n      schema = props.schema,\n      defaultColumnWidth = props.defaultColumnWidth,\n      setColumnWidth = props.setColumnWidth,\n      sorting = props.sorting,\n      focusedCell = props.focusedCell,\n      setFocusedCell = props.setFocusedCell,\n      headerIsInteractive = props.headerIsInteractive;\n  var id = column.id,\n      display = column.display;\n  var width = columnWidths[id] || defaultColumnWidth;\n  var ariaProps = {};\n  var screenReaderId;\n  var sortString;\n\n  if (sorting) {\n    var sortedColumnIds = new Set(sorting.columns.map(function (_ref) {\n      var id = _ref.id;\n      return id;\n    }));\n\n    if (sorting.columns.length === 1 && sortedColumnIds.has(id)) {\n      var sortDirection = sorting.columns[0].direction;\n      var sortValue = 'other';\n\n      if (sortDirection === 'asc') {\n        sortValue = 'ascending';\n      } else if (sortDirection === 'desc') {\n        sortValue = 'descending';\n      }\n\n      ariaProps['aria-sort'] = sortValue;\n    } else if (sorting.columns.length >= 2 && sortedColumnIds.has(id)) {\n      sortString = sorting.columns.map(function (col) {\n        return \"Sorted by \".concat(col.id, \" \").concat(col.direction);\n      }).join(' then ');\n      screenReaderId = htmlIdGenerator()();\n      ariaProps['aria-describedby'] = screenReaderId;\n    }\n  }\n\n  var columnType = schema[id] ? schema[id].columnType : null;\n  var classes = classnames('euiDataGridHeaderCell', _defineProperty({}, \"euiDataGridHeaderCell--\".concat(columnType), columnType));\n  var headerRef = useRef(null);\n  var isFocused = focusedCell[0] === index && focusedCell[1] === -1;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isCellEntered = _useState2[0],\n      setIsCellEntered = _useState2[1];\n\n  useEffect(function () {\n    if (headerRef.current) {\n      var enableInteractives = function enableInteractives() {\n        var interactiveElements = headerRef.current.querySelectorAll('[data-euigrid-tab-managed]');\n\n        for (var i = 0; i < interactiveElements.length; i++) {\n          interactiveElements[i].setAttribute('tabIndex', '0');\n        }\n      };\n\n      var disableInteractives = function disableInteractives() {\n        var tababbles = tabbable(headerRef.current);\n\n        if (tababbles.length > 1) {\n          console.warn(\"EuiDataGridHeaderCell expects at most 1 tabbable element, \".concat(tababbles.length, \" found instead\"));\n        }\n\n        for (var i = 0; i < tababbles.length; i++) {\n          var element = tababbles[i];\n          element.setAttribute('data-euigrid-tab-managed', 'true');\n          element.setAttribute('tabIndex', '-1');\n        }\n      };\n\n      if (isCellEntered) {\n        enableInteractives();\n        var tabbables = tabbable(headerRef.current);\n\n        if (tabbables.length > 0) {\n          tabbables[0].focus();\n        }\n      } else {\n        disableInteractives();\n      }\n    }\n  }, [isCellEntered]);\n  useEffect(function () {\n    if (headerRef.current) {\n      // focusin bubbles while focus does not, and this needs to react to children gaining focus\n      var onFocusIn = function onFocusIn(e) {\n        if (headerIsInteractive === false) {\n          // header is not interactive, avoid focusing\n          requestAnimationFrame(function () {\n            return headerRef.current.blur();\n          });\n          e.preventDefault();\n          return false;\n        } else {\n          // take the focus\n          setFocusedCell([index, -1]);\n        }\n      }; // focusout bubbles while blur does not, and this needs to react to the children losing focus\n\n\n      var onFocusOut = function onFocusOut() {\n        // wait for the next element to receive focus, then update interactives' state\n        requestAnimationFrame(function () {\n          if (headerRef.current) {\n            if (headerRef.current.contains(document.activeElement) === false) {\n              setIsCellEntered(false);\n            }\n          }\n        });\n      };\n\n      var onKeyUp = function onKeyUp(e) {\n        switch (e.keyCode) {\n          case keyCodes.ENTER:\n            {\n              e.preventDefault();\n              setIsCellEntered(true);\n              break;\n            }\n\n          case keyCodes.ESCAPE:\n            {\n              e.preventDefault(); // move focus to cell\n\n              setIsCellEntered(false);\n              headerRef.current.focus();\n              break;\n            }\n\n          case keyCodes.F2:\n            {\n              e.preventDefault();\n\n              if (document.activeElement === headerRef.current) {\n                // move focus into cell's interactives\n                setIsCellEntered(true);\n              } else {\n                // move focus to cell\n                setIsCellEntered(false);\n                headerRef.current.focus();\n              }\n\n              break;\n            }\n        }\n      };\n\n      if (isFocused) {\n        var interactives = headerRef.current.querySelectorAll('[data-euigrid-tab-managed]');\n\n        if (interactives.length === 1) {\n          setIsCellEntered(true);\n        } else {\n          headerRef.current.focus();\n        }\n      } else {\n        setIsCellEntered(false);\n      }\n\n      var headerNode = headerRef.current; // @ts-ignore-next line TS doesn't have focusin\n\n      headerNode.addEventListener('focusin', onFocusIn);\n      headerNode.addEventListener('focusout', onFocusOut);\n      headerNode.addEventListener('keyup', onKeyUp);\n      return function () {\n        // @ts-ignore-next line TS doesn't have focusin\n        headerNode.removeEventListener('focusin', onFocusIn);\n        headerNode.removeEventListener('focusout', onFocusOut);\n        headerNode.removeEventListener('keyup', onKeyUp);\n      };\n    }\n  }, [headerIsInteractive, isFocused, setIsCellEntered, setFocusedCell, index]);\n  return React.createElement(\"div\", _extends({\n    role: \"columnheader\"\n  }, ariaProps, {\n    key: id,\n    ref: headerRef,\n    tabIndex: isFocused ? 0 : -1,\n    className: classes,\n    \"data-test-subj\": \"dataGridHeaderCell-\".concat(id),\n    style: width != null ? {\n      width: \"\".concat(width, \"px\")\n    } : {}\n  }), column.isResizable !== false && width != null ? React.createElement(EuiDataGridColumnResizer, {\n    columnId: id,\n    columnWidth: width,\n    setColumnWidth: setColumnWidth\n  }) : null, React.createElement(\"div\", {\n    className: \"euiDataGridHeaderCell__content\"\n  }, display || id), sorting && sorting.columns.length >= 2 && React.createElement(EuiScreenReaderOnly, null, React.createElement(\"div\", {\n    id: screenReaderId\n  }, sortString)));\n};\n\nEuiDataGridHeaderCell.propTypes = {\n  column: PropTypes.shape({\n    /**\n       * The unique identifier for this column\n       */\n    id: PropTypes.string.isRequired,\n\n    /**\n       * A `ReactNode` used when rendering the column header. When providing complicated content, please make sure to utilize CSS to respect truncation as space allows. Check the docs example.\n       */\n    display: PropTypes.node,\n\n    /**\n       * A Schema to use for the column. Built-in values are ['boolean', 'currency', 'datetime', 'numeric', 'json'] but can be expanded by defining your own #EuiDataGrid `schemaDetectors` (for in-memory detection). In general, it is advised to pass in a value here when you are sure of the schema ahead of time, so that you don't need to rely on the automatic detection.\n       */\n    schema: PropTypes.string,\n\n    /**\n       * Defauls to true. Defines shether or not the column's cells can be expanded with a popup onClick / keydown.\n       */\n    isExpandable: PropTypes.bool,\n\n    /**\n       * Whether this column's width can be changed by the user, defaults to true\n       */\n    isResizable: PropTypes.bool,\n\n    /**\n       * Initial width (in pixels) of the column\n       */\n    initialWidth: PropTypes.number\n  }).isRequired,\n  index: PropTypes.number.isRequired\n};\nvar EuiDataGridHeaderRow = forwardRef(function (props, ref) {\n  var columns = props.columns,\n      schema = props.schema,\n      columnWidths = props.columnWidths,\n      defaultColumnWidth = props.defaultColumnWidth,\n      className = props.className,\n      setColumnWidth = props.setColumnWidth,\n      sorting = props.sorting,\n      focusedCell = props.focusedCell,\n      setFocusedCell = props.setFocusedCell,\n      headerIsInteractive = props.headerIsInteractive,\n      _dataTestSubj = props['data-test-subj'],\n      rest = _objectWithoutProperties(props, [\"columns\", \"schema\", \"columnWidths\", \"defaultColumnWidth\", \"className\", \"setColumnWidth\", \"sorting\", \"focusedCell\", \"setFocusedCell\", \"headerIsInteractive\", \"data-test-subj\"]);\n\n  var classes = classnames('euiDataGridHeader', className);\n  var dataTestSubj = classnames('dataGridHeader', _dataTestSubj);\n  return React.createElement(\"div\", _extends({\n    role: \"row\",\n    ref: ref,\n    className: classes,\n    \"data-test-subj\": dataTestSubj\n  }, rest), columns.map(function (column, index) {\n    return React.createElement(EuiDataGridHeaderCell, {\n      key: column.id,\n      column: column,\n      index: index,\n      columnWidths: columnWidths,\n      focusedCell: focusedCell,\n      setFocusedCell: setFocusedCell,\n      schema: schema,\n      setColumnWidth: setColumnWidth,\n      defaultColumnWidth: defaultColumnWidth,\n      sorting: sorting,\n      headerIsInteractive: headerIsInteractive\n    });\n  }));\n});\nEuiDataGridHeaderRow.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    display: PropTypes.node,\n    schema: PropTypes.string,\n    isExpandable: PropTypes.bool,\n    isResizable: PropTypes.bool,\n    initialWidth: PropTypes.number\n  }).isRequired).isRequired,\n  columnWidths: PropTypes.shape({}).isRequired,\n  schema: PropTypes.shape({}).isRequired,\n  defaultColumnWidth: PropTypes.oneOfType([PropTypes.number.isRequired, PropTypes.oneOf([null])]),\n  setColumnWidth: PropTypes.func.isRequired,\n  sorting: PropTypes.shape({\n    /**\n       * A function that receives updated column sort details in response to user interactions in the toolbar controls\n       */\n    onSort: PropTypes.func.isRequired,\n\n    /**\n       * An array of the column ids currently being sorted and their sort direction. The array order determines the sort order. `{ id: 'A'; direction: 'asc' }`\n       */\n    columns: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      direction: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired\n    }).isRequired).isRequired\n  }),\n  focusedCell: PropTypes.any.isRequired,\n  setFocusedCell: PropTypes.func.isRequired,\n  headerIsInteractive: PropTypes.bool.isRequired\n};\nexport { EuiDataGridHeaderRow };","map":{"version":3,"sources":["/home/ad.rapidops.com/jaymin.shah/project/demostruct/node_modules/@elastic/eui/es/components/datagrid/data_grid_header_row.js"],"names":["_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","keys","_extends","assign","arguments","hasOwnProperty","apply","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Symbol","iterator","toString","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","err","Array","isArray","_defineProperty","obj","defineProperty","enumerable","configurable","writable","React","forwardRef","useRef","useEffect","useState","PropTypes","classnames","tabbable","EuiDataGridColumnResizer","htmlIdGenerator","EuiScreenReaderOnly","keyCodes","EuiDataGridHeaderCell","props","column","index","columnWidths","schema","defaultColumnWidth","setColumnWidth","sorting","focusedCell","setFocusedCell","headerIsInteractive","id","display","width","ariaProps","screenReaderId","sortString","sortedColumnIds","Set","columns","map","_ref","has","sortDirection","direction","sortValue","col","concat","join","columnType","classes","headerRef","isFocused","_useState","_useState2","isCellEntered","setIsCellEntered","current","enableInteractives","interactiveElements","querySelectorAll","setAttribute","disableInteractives","tababbles","console","warn","element","tabbables","focus","onFocusIn","e","requestAnimationFrame","blur","preventDefault","onFocusOut","contains","document","activeElement","onKeyUp","keyCode","ENTER","ESCAPE","F2","interactives","headerNode","addEventListener","removeEventListener","createElement","role","ref","tabIndex","className","style","isResizable","columnId","columnWidth","propTypes","shape","string","isRequired","node","isExpandable","bool","initialWidth","number","EuiDataGridHeaderRow","_dataTestSubj","rest","dataTestSubj","arrayOf","oneOfType","oneOf","func","onSort","any"],"mappings":"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","sourcesContent":["function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { forwardRef, useRef, useEffect, useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport classnames from 'classnames';\nimport tabbable from 'tabbable';\nimport { EuiDataGridColumnResizer } from './data_grid_column_resizer';\nimport { htmlIdGenerator } from '../../services/accessibility';\nimport { EuiScreenReaderOnly } from '../accessibility';\nimport { keyCodes } from '../../services';\n\nvar EuiDataGridHeaderCell = function EuiDataGridHeaderCell(props) {\n  var column = props.column,\n      index = props.index,\n      columnWidths = props.columnWidths,\n      schema = props.schema,\n      defaultColumnWidth = props.defaultColumnWidth,\n      setColumnWidth = props.setColumnWidth,\n      sorting = props.sorting,\n      focusedCell = props.focusedCell,\n      setFocusedCell = props.setFocusedCell,\n      headerIsInteractive = props.headerIsInteractive;\n  var id = column.id,\n      display = column.display;\n  var width = columnWidths[id] || defaultColumnWidth;\n  var ariaProps = {};\n  var screenReaderId;\n  var sortString;\n\n  if (sorting) {\n    var sortedColumnIds = new Set(sorting.columns.map(function (_ref) {\n      var id = _ref.id;\n      return id;\n    }));\n\n    if (sorting.columns.length === 1 && sortedColumnIds.has(id)) {\n      var sortDirection = sorting.columns[0].direction;\n      var sortValue = 'other';\n\n      if (sortDirection === 'asc') {\n        sortValue = 'ascending';\n      } else if (sortDirection === 'desc') {\n        sortValue = 'descending';\n      }\n\n      ariaProps['aria-sort'] = sortValue;\n    } else if (sorting.columns.length >= 2 && sortedColumnIds.has(id)) {\n      sortString = sorting.columns.map(function (col) {\n        return \"Sorted by \".concat(col.id, \" \").concat(col.direction);\n      }).join(' then ');\n      screenReaderId = htmlIdGenerator()();\n      ariaProps['aria-describedby'] = screenReaderId;\n    }\n  }\n\n  var columnType = schema[id] ? schema[id].columnType : null;\n  var classes = classnames('euiDataGridHeaderCell', _defineProperty({}, \"euiDataGridHeaderCell--\".concat(columnType), columnType));\n  var headerRef = useRef(null);\n  var isFocused = focusedCell[0] === index && focusedCell[1] === -1;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isCellEntered = _useState2[0],\n      setIsCellEntered = _useState2[1];\n\n  useEffect(function () {\n    if (headerRef.current) {\n      var enableInteractives = function enableInteractives() {\n        var interactiveElements = headerRef.current.querySelectorAll('[data-euigrid-tab-managed]');\n\n        for (var i = 0; i < interactiveElements.length; i++) {\n          interactiveElements[i].setAttribute('tabIndex', '0');\n        }\n      };\n\n      var disableInteractives = function disableInteractives() {\n        var tababbles = tabbable(headerRef.current);\n\n        if (tababbles.length > 1) {\n          console.warn(\"EuiDataGridHeaderCell expects at most 1 tabbable element, \".concat(tababbles.length, \" found instead\"));\n        }\n\n        for (var i = 0; i < tababbles.length; i++) {\n          var element = tababbles[i];\n          element.setAttribute('data-euigrid-tab-managed', 'true');\n          element.setAttribute('tabIndex', '-1');\n        }\n      };\n\n      if (isCellEntered) {\n        enableInteractives();\n        var tabbables = tabbable(headerRef.current);\n\n        if (tabbables.length > 0) {\n          tabbables[0].focus();\n        }\n      } else {\n        disableInteractives();\n      }\n    }\n  }, [isCellEntered]);\n  useEffect(function () {\n    if (headerRef.current) {\n      // focusin bubbles while focus does not, and this needs to react to children gaining focus\n      var onFocusIn = function onFocusIn(e) {\n        if (headerIsInteractive === false) {\n          // header is not interactive, avoid focusing\n          requestAnimationFrame(function () {\n            return headerRef.current.blur();\n          });\n          e.preventDefault();\n          return false;\n        } else {\n          // take the focus\n          setFocusedCell([index, -1]);\n        }\n      }; // focusout bubbles while blur does not, and this needs to react to the children losing focus\n\n\n      var onFocusOut = function onFocusOut() {\n        // wait for the next element to receive focus, then update interactives' state\n        requestAnimationFrame(function () {\n          if (headerRef.current) {\n            if (headerRef.current.contains(document.activeElement) === false) {\n              setIsCellEntered(false);\n            }\n          }\n        });\n      };\n\n      var onKeyUp = function onKeyUp(e) {\n        switch (e.keyCode) {\n          case keyCodes.ENTER:\n            {\n              e.preventDefault();\n              setIsCellEntered(true);\n              break;\n            }\n\n          case keyCodes.ESCAPE:\n            {\n              e.preventDefault(); // move focus to cell\n\n              setIsCellEntered(false);\n              headerRef.current.focus();\n              break;\n            }\n\n          case keyCodes.F2:\n            {\n              e.preventDefault();\n\n              if (document.activeElement === headerRef.current) {\n                // move focus into cell's interactives\n                setIsCellEntered(true);\n              } else {\n                // move focus to cell\n                setIsCellEntered(false);\n                headerRef.current.focus();\n              }\n\n              break;\n            }\n        }\n      };\n\n      if (isFocused) {\n        var interactives = headerRef.current.querySelectorAll('[data-euigrid-tab-managed]');\n\n        if (interactives.length === 1) {\n          setIsCellEntered(true);\n        } else {\n          headerRef.current.focus();\n        }\n      } else {\n        setIsCellEntered(false);\n      }\n\n      var headerNode = headerRef.current; // @ts-ignore-next line TS doesn't have focusin\n\n      headerNode.addEventListener('focusin', onFocusIn);\n      headerNode.addEventListener('focusout', onFocusOut);\n      headerNode.addEventListener('keyup', onKeyUp);\n      return function () {\n        // @ts-ignore-next line TS doesn't have focusin\n        headerNode.removeEventListener('focusin', onFocusIn);\n        headerNode.removeEventListener('focusout', onFocusOut);\n        headerNode.removeEventListener('keyup', onKeyUp);\n      };\n    }\n  }, [headerIsInteractive, isFocused, setIsCellEntered, setFocusedCell, index]);\n  return React.createElement(\"div\", _extends({\n    role: \"columnheader\"\n  }, ariaProps, {\n    key: id,\n    ref: headerRef,\n    tabIndex: isFocused ? 0 : -1,\n    className: classes,\n    \"data-test-subj\": \"dataGridHeaderCell-\".concat(id),\n    style: width != null ? {\n      width: \"\".concat(width, \"px\")\n    } : {}\n  }), column.isResizable !== false && width != null ? React.createElement(EuiDataGridColumnResizer, {\n    columnId: id,\n    columnWidth: width,\n    setColumnWidth: setColumnWidth\n  }) : null, React.createElement(\"div\", {\n    className: \"euiDataGridHeaderCell__content\"\n  }, display || id), sorting && sorting.columns.length >= 2 && React.createElement(EuiScreenReaderOnly, null, React.createElement(\"div\", {\n    id: screenReaderId\n  }, sortString)));\n};\n\nEuiDataGridHeaderCell.propTypes = {\n  column: PropTypes.shape({\n    /**\n       * The unique identifier for this column\n       */\n    id: PropTypes.string.isRequired,\n\n    /**\n       * A `ReactNode` used when rendering the column header. When providing complicated content, please make sure to utilize CSS to respect truncation as space allows. Check the docs example.\n       */\n    display: PropTypes.node,\n\n    /**\n       * A Schema to use for the column. Built-in values are ['boolean', 'currency', 'datetime', 'numeric', 'json'] but can be expanded by defining your own #EuiDataGrid `schemaDetectors` (for in-memory detection). In general, it is advised to pass in a value here when you are sure of the schema ahead of time, so that you don't need to rely on the automatic detection.\n       */\n    schema: PropTypes.string,\n\n    /**\n       * Defauls to true. Defines shether or not the column's cells can be expanded with a popup onClick / keydown.\n       */\n    isExpandable: PropTypes.bool,\n\n    /**\n       * Whether this column's width can be changed by the user, defaults to true\n       */\n    isResizable: PropTypes.bool,\n\n    /**\n       * Initial width (in pixels) of the column\n       */\n    initialWidth: PropTypes.number\n  }).isRequired,\n  index: PropTypes.number.isRequired\n};\nvar EuiDataGridHeaderRow = forwardRef(function (props, ref) {\n  var columns = props.columns,\n      schema = props.schema,\n      columnWidths = props.columnWidths,\n      defaultColumnWidth = props.defaultColumnWidth,\n      className = props.className,\n      setColumnWidth = props.setColumnWidth,\n      sorting = props.sorting,\n      focusedCell = props.focusedCell,\n      setFocusedCell = props.setFocusedCell,\n      headerIsInteractive = props.headerIsInteractive,\n      _dataTestSubj = props['data-test-subj'],\n      rest = _objectWithoutProperties(props, [\"columns\", \"schema\", \"columnWidths\", \"defaultColumnWidth\", \"className\", \"setColumnWidth\", \"sorting\", \"focusedCell\", \"setFocusedCell\", \"headerIsInteractive\", \"data-test-subj\"]);\n\n  var classes = classnames('euiDataGridHeader', className);\n  var dataTestSubj = classnames('dataGridHeader', _dataTestSubj);\n  return React.createElement(\"div\", _extends({\n    role: \"row\",\n    ref: ref,\n    className: classes,\n    \"data-test-subj\": dataTestSubj\n  }, rest), columns.map(function (column, index) {\n    return React.createElement(EuiDataGridHeaderCell, {\n      key: column.id,\n      column: column,\n      index: index,\n      columnWidths: columnWidths,\n      focusedCell: focusedCell,\n      setFocusedCell: setFocusedCell,\n      schema: schema,\n      setColumnWidth: setColumnWidth,\n      defaultColumnWidth: defaultColumnWidth,\n      sorting: sorting,\n      headerIsInteractive: headerIsInteractive\n    });\n  }));\n});\nEuiDataGridHeaderRow.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    display: PropTypes.node,\n    schema: PropTypes.string,\n    isExpandable: PropTypes.bool,\n    isResizable: PropTypes.bool,\n    initialWidth: PropTypes.number\n  }).isRequired).isRequired,\n  columnWidths: PropTypes.shape({}).isRequired,\n  schema: PropTypes.shape({}).isRequired,\n  defaultColumnWidth: PropTypes.oneOfType([PropTypes.number.isRequired, PropTypes.oneOf([null])]),\n  setColumnWidth: PropTypes.func.isRequired,\n  sorting: PropTypes.shape({\n    /**\n       * A function that receives updated column sort details in response to user interactions in the toolbar controls\n       */\n    onSort: PropTypes.func.isRequired,\n\n    /**\n       * An array of the column ids currently being sorted and their sort direction. The array order determines the sort order. `{ id: 'A'; direction: 'asc' }`\n       */\n    columns: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      direction: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired\n    }).isRequired).isRequired\n  }),\n  focusedCell: PropTypes.any.isRequired,\n  setFocusedCell: PropTypes.func.isRequired,\n  headerIsInteractive: PropTypes.bool.isRequired\n};\nexport { EuiDataGridHeaderRow };"]},"metadata":{},"sourceType":"module"}