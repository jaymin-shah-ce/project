{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { keysOf } from '../../common';\nimport { EuiLoadingSpinner } from '../../loading';\nimport { getSecureRelForTarget } from '../../../services';\nimport { EuiIcon } from '../../icon';\nvar colorToClassNameMap = {\n  primary: 'euiButtonEmpty--primary',\n  danger: 'euiButtonEmpty--danger',\n  disabled: 'euiButtonEmpty--disabled',\n  text: 'euiButtonEmpty--text',\n  ghost: 'euiButtonEmpty--ghost'\n};\nexport var COLORS = keysOf(colorToClassNameMap);\nvar sizeToClassNameMap = {\n  xs: 'euiButtonEmpty--xSmall',\n  s: 'euiButtonEmpty--small',\n  l: 'euiButtonEmpty--large'\n};\nexport var SIZES = keysOf(sizeToClassNameMap);\nvar iconSideToClassNameMap = {\n  left: '',\n  right: 'euiButtonEmpty--iconRight'\n};\nexport var ICON_SIDES = keysOf(iconSideToClassNameMap);\nvar flushTypeToClassNameMap = {\n  left: 'euiButtonEmpty--flushLeft',\n  right: 'euiButtonEmpty--flushRight'\n};\nexport var FLUSH_TYPES = keysOf(flushTypeToClassNameMap);\nexport var EuiButtonEmpty = function EuiButtonEmpty(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      iconType = _ref.iconType,\n      _ref$iconSide = _ref.iconSide,\n      iconSide = _ref$iconSide === void 0 ? 'left' : _ref$iconSide,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'primary' : _ref$color,\n      size = _ref.size,\n      flush = _ref.flush,\n      isDisabled = _ref.isDisabled,\n      isLoading = _ref.isLoading,\n      href = _ref.href,\n      target = _ref.target,\n      rel = _ref.rel,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'button' : _ref$type,\n      buttonRef = _ref.buttonRef,\n      contentProps = _ref.contentProps,\n      textProps = _ref.textProps,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"iconType\", \"iconSide\", \"color\", \"size\", \"flush\", \"isDisabled\", \"isLoading\", \"href\", \"target\", \"rel\", \"type\", \"buttonRef\", \"contentProps\", \"textProps\"]); // If in the loading state, force disabled to true\n\n\n  isDisabled = isLoading ? true : isDisabled;\n  var classes = classNames('euiButtonEmpty', colorToClassNameMap[color], size ? sizeToClassNameMap[size] : null, iconSideToClassNameMap[iconSide], flush ? flushTypeToClassNameMap[flush] : null, className);\n  var contentClassNames = classNames('euiButtonEmpty__content', contentProps && contentProps.className);\n  var textClassNames = classNames('euiButtonEmpty__text', textProps && textProps.className); // Add an icon to the button if one exists.\n\n  var buttonIcon;\n\n  if (isLoading) {\n    buttonIcon = React.createElement(EuiLoadingSpinner, {\n      className: \"euiButton__spinner\",\n      size: \"m\"\n    });\n  } else if (iconType) {\n    buttonIcon = React.createElement(EuiIcon, {\n      className: \"euiButtonEmpty__icon\",\n      type: iconType,\n      size: \"m\",\n      \"aria-hidden\": \"true\"\n    });\n  }\n\n  var innerNode = React.createElement(\"span\", _extends({}, contentProps, {\n    className: contentClassNames\n  }), buttonIcon, React.createElement(\"span\", _extends({}, textProps, {\n    className: textClassNames\n  }), children)); // <a> elements don't respect the `disabled` attribute. So if we're disabled, we'll just pretend\n  // this is a button and piggyback off its disabled styles.\n\n  if (href && !isDisabled) {\n    var secureRel = getSecureRelForTarget({\n      href: href,\n      target: target,\n      rel: rel\n    });\n    return React.createElement(\"a\", _extends({\n      className: classes,\n      href: href,\n      target: target,\n      rel: secureRel,\n      ref: buttonRef\n    }, rest), innerNode);\n  }\n\n  return React.createElement(\"button\", _extends({\n    disabled: isDisabled,\n    className: classes,\n    type: type,\n    ref: buttonRef\n  }, rest), innerNode);\n};\nEuiButtonEmpty.propTypes = {\n  href: PropTypes.string,\n  onClick: PropTypes.func\n};\nEuiButtonEmpty.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiButtonEmpty\",\n  \"props\": {\n    \"iconSide\": {\n      \"defaultValue\": {\n        \"value\": \"'left'\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"color\": {\n      \"defaultValue\": {\n        \"value\": \"'primary'\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"type\": {\n      \"defaultValue\": {\n        \"value\": \"'button'\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"href\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};","map":{"version":3,"sources":["/home/ad.rapidops.com/jaymin.shah/project/demostruct/node_modules/@elastic/eui/es/components/button/button_empty/button_empty.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","React","PropTypes","classNames","keysOf","EuiLoadingSpinner","getSecureRelForTarget","EuiIcon","colorToClassNameMap","primary","danger","disabled","text","ghost","COLORS","sizeToClassNameMap","xs","s","l","SIZES","iconSideToClassNameMap","left","right","ICON_SIDES","flushTypeToClassNameMap","FLUSH_TYPES","EuiButtonEmpty","_ref","children","className","iconType","_ref$iconSide","iconSide","_ref$color","color","size","flush","isDisabled","isLoading","href","rel","_ref$type","type","buttonRef","contentProps","textProps","rest","classes","contentClassNames","textClassNames","buttonIcon","createElement","innerNode","secureRel","ref","propTypes","string","onClick","func","__docgenInfo"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { keysOf } from '../../common';\nimport { EuiLoadingSpinner } from '../../loading';\nimport { getSecureRelForTarget } from '../../../services';\nimport { EuiIcon } from '../../icon';\nvar colorToClassNameMap = {\n  primary: 'euiButtonEmpty--primary',\n  danger: 'euiButtonEmpty--danger',\n  disabled: 'euiButtonEmpty--disabled',\n  text: 'euiButtonEmpty--text',\n  ghost: 'euiButtonEmpty--ghost'\n};\nexport var COLORS = keysOf(colorToClassNameMap);\nvar sizeToClassNameMap = {\n  xs: 'euiButtonEmpty--xSmall',\n  s: 'euiButtonEmpty--small',\n  l: 'euiButtonEmpty--large'\n};\nexport var SIZES = keysOf(sizeToClassNameMap);\nvar iconSideToClassNameMap = {\n  left: '',\n  right: 'euiButtonEmpty--iconRight'\n};\nexport var ICON_SIDES = keysOf(iconSideToClassNameMap);\nvar flushTypeToClassNameMap = {\n  left: 'euiButtonEmpty--flushLeft',\n  right: 'euiButtonEmpty--flushRight'\n};\nexport var FLUSH_TYPES = keysOf(flushTypeToClassNameMap);\nexport var EuiButtonEmpty = function EuiButtonEmpty(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      iconType = _ref.iconType,\n      _ref$iconSide = _ref.iconSide,\n      iconSide = _ref$iconSide === void 0 ? 'left' : _ref$iconSide,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'primary' : _ref$color,\n      size = _ref.size,\n      flush = _ref.flush,\n      isDisabled = _ref.isDisabled,\n      isLoading = _ref.isLoading,\n      href = _ref.href,\n      target = _ref.target,\n      rel = _ref.rel,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'button' : _ref$type,\n      buttonRef = _ref.buttonRef,\n      contentProps = _ref.contentProps,\n      textProps = _ref.textProps,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"iconType\", \"iconSide\", \"color\", \"size\", \"flush\", \"isDisabled\", \"isLoading\", \"href\", \"target\", \"rel\", \"type\", \"buttonRef\", \"contentProps\", \"textProps\"]);\n\n  // If in the loading state, force disabled to true\n  isDisabled = isLoading ? true : isDisabled;\n  var classes = classNames('euiButtonEmpty', colorToClassNameMap[color], size ? sizeToClassNameMap[size] : null, iconSideToClassNameMap[iconSide], flush ? flushTypeToClassNameMap[flush] : null, className);\n  var contentClassNames = classNames('euiButtonEmpty__content', contentProps && contentProps.className);\n  var textClassNames = classNames('euiButtonEmpty__text', textProps && textProps.className); // Add an icon to the button if one exists.\n\n  var buttonIcon;\n\n  if (isLoading) {\n    buttonIcon = React.createElement(EuiLoadingSpinner, {\n      className: \"euiButton__spinner\",\n      size: \"m\"\n    });\n  } else if (iconType) {\n    buttonIcon = React.createElement(EuiIcon, {\n      className: \"euiButtonEmpty__icon\",\n      type: iconType,\n      size: \"m\",\n      \"aria-hidden\": \"true\"\n    });\n  }\n\n  var innerNode = React.createElement(\"span\", _extends({}, contentProps, {\n    className: contentClassNames\n  }), buttonIcon, React.createElement(\"span\", _extends({}, textProps, {\n    className: textClassNames\n  }), children)); // <a> elements don't respect the `disabled` attribute. So if we're disabled, we'll just pretend\n  // this is a button and piggyback off its disabled styles.\n\n  if (href && !isDisabled) {\n    var secureRel = getSecureRelForTarget({\n      href: href,\n      target: target,\n      rel: rel\n    });\n    return React.createElement(\"a\", _extends({\n      className: classes,\n      href: href,\n      target: target,\n      rel: secureRel,\n      ref: buttonRef\n    }, rest), innerNode);\n  }\n\n  return React.createElement(\"button\", _extends({\n    disabled: isDisabled,\n    className: classes,\n    type: type,\n    ref: buttonRef\n  }, rest), innerNode);\n};\nEuiButtonEmpty.propTypes = {\n  href: PropTypes.string,\n  onClick: PropTypes.func\n};\nEuiButtonEmpty.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiButtonEmpty\",\n  \"props\": {\n    \"iconSide\": {\n      \"defaultValue\": {\n        \"value\": \"'left'\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"color\": {\n      \"defaultValue\": {\n        \"value\": \"'primary'\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"type\": {\n      \"defaultValue\": {\n        \"value\": \"'button'\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"href\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}