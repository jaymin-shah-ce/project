{"ast":null,"code":"import React from 'react';\nimport { isString } from '../../services/predicate';\nimport { EuiButtonEmpty, EuiButtonIcon } from '../button';\nimport { EuiToolTip } from '../tool_tip'; // In order to use generics with an arrow function inside a .tsx file, it's necessary to use\n// this `extends` hack and declare the types as shown, instead of declaring the const as a\n// FunctionComponent\n\nexport var DefaultItemAction = function DefaultItemAction(_ref) {\n  var action = _ref.action,\n      enabled = _ref.enabled,\n      item = _ref.item,\n      className = _ref.className;\n\n  if (!action.onClick && !action.href) {\n    throw new Error(\"Cannot render item action [\".concat(action.name, \"]. Missing required 'onClick' callback\\n      or 'href' string. If you want to provide a custom action control, make sure to define the 'render' callback\"));\n  }\n\n  var onClick = action.onClick ? function () {\n    return action.onClick(item);\n  } : undefined;\n\n  var resolveActionColor = function resolveActionColor(action) {\n    return isString(action.color) ? action.color : action.color(item);\n  };\n\n  var color = action.color ? resolveActionColor(action) : 'primary';\n  var _ref2 = action,\n      buttonIcon = _ref2.icon;\n\n  var resolveActionIcon = function resolveActionIcon(action) {\n    return isString(action.icon) ? action.icon : action.icon(item);\n  };\n\n  var icon = buttonIcon ? resolveActionIcon(action) : undefined;\n  var button;\n\n  if (action.type === 'icon') {\n    if (!icon) {\n      throw new Error(\"Cannot render item action [\".concat(action.name, \"]. It is configured to render as an icon but no\\n      icon is provided. Make sure to set the 'icon' property of the action\"));\n    }\n\n    button = React.createElement(EuiButtonIcon, {\n      className: className,\n      \"aria-label\": action.name,\n      isDisabled: !enabled,\n      color: color,\n      iconType: icon,\n      onClick: onClick,\n      href: action.href,\n      target: action.target,\n      \"data-test-subj\": action['data-test-subj']\n    });\n  } else {\n    button = React.createElement(EuiButtonEmpty, {\n      className: className,\n      size: \"s\",\n      isDisabled: !enabled,\n      color: color,\n      iconType: icon,\n      onClick: onClick,\n      href: action.href,\n      target: action.target,\n      \"data-test-subj\": action['data-test-subj'],\n      flush: \"right\"\n    }, action.name);\n  }\n\n  return enabled && action.description ? React.createElement(EuiToolTip, {\n    content: action.description,\n    delay: \"long\"\n  }, button) : button;\n};","map":{"version":3,"sources":["/home/ad.rapidops.com/jaymin.shah/project/demostruct/node_modules/@elastic/eui/es/components/basic_table/default_item_action.js"],"names":["React","isString","EuiButtonEmpty","EuiButtonIcon","EuiToolTip","DefaultItemAction","_ref","action","enabled","item","className","onClick","href","Error","concat","name","undefined","resolveActionColor","color","_ref2","buttonIcon","icon","resolveActionIcon","button","type","createElement","isDisabled","iconType","target","size","flush","description","content","delay"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,WAA9C;AACA,SAASC,UAAT,QAA2B,aAA3B,C,CACA;AACA;AACA;;AACA,OAAO,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AAC9D,MAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;AAAA,MACIC,OAAO,GAAGF,IAAI,CAACE,OADnB;AAAA,MAEIC,IAAI,GAAGH,IAAI,CAACG,IAFhB;AAAA,MAGIC,SAAS,GAAGJ,IAAI,CAACI,SAHrB;;AAKA,MAAI,CAACH,MAAM,CAACI,OAAR,IAAmB,CAACJ,MAAM,CAACK,IAA/B,EAAqC;AACnC,UAAM,IAAIC,KAAJ,CAAU,8BAA8BC,MAA9B,CAAqCP,MAAM,CAACQ,IAA5C,EAAkD,2JAAlD,CAAV,CAAN;AACD;;AAED,MAAIJ,OAAO,GAAGJ,MAAM,CAACI,OAAP,GAAiB,YAAY;AACzC,WAAOJ,MAAM,CAACI,OAAP,CAAeF,IAAf,CAAP;AACD,GAFa,GAEVO,SAFJ;;AAIA,MAAIC,kBAAkB,GAAG,SAASA,kBAAT,CAA4BV,MAA5B,EAAoC;AAC3D,WAAON,QAAQ,CAACM,MAAM,CAACW,KAAR,CAAR,GAAyBX,MAAM,CAACW,KAAhC,GAAwCX,MAAM,CAACW,KAAP,CAAaT,IAAb,CAA/C;AACD,GAFD;;AAIA,MAAIS,KAAK,GAAGX,MAAM,CAACW,KAAP,GAAeD,kBAAkB,CAACV,MAAD,CAAjC,GAA4C,SAAxD;AACA,MAAIY,KAAK,GAAGZ,MAAZ;AAAA,MACIa,UAAU,GAAGD,KAAK,CAACE,IADvB;;AAGA,MAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2Bf,MAA3B,EAAmC;AACzD,WAAON,QAAQ,CAACM,MAAM,CAACc,IAAR,CAAR,GAAwBd,MAAM,CAACc,IAA/B,GAAsCd,MAAM,CAACc,IAAP,CAAYZ,IAAZ,CAA7C;AACD,GAFD;;AAIA,MAAIY,IAAI,GAAGD,UAAU,GAAGE,iBAAiB,CAACf,MAAD,CAApB,GAA+BS,SAApD;AACA,MAAIO,MAAJ;;AAEA,MAAIhB,MAAM,CAACiB,IAAP,KAAgB,MAApB,EAA4B;AAC1B,QAAI,CAACH,IAAL,EAAW;AACT,YAAM,IAAIR,KAAJ,CAAU,8BAA8BC,MAA9B,CAAqCP,MAAM,CAACQ,IAA5C,EAAkD,6HAAlD,CAAV,CAAN;AACD;;AAEDQ,IAAAA,MAAM,GAAGvB,KAAK,CAACyB,aAAN,CAAoBtB,aAApB,EAAmC;AAC1CO,MAAAA,SAAS,EAAEA,SAD+B;AAE1C,oBAAcH,MAAM,CAACQ,IAFqB;AAG1CW,MAAAA,UAAU,EAAE,CAAClB,OAH6B;AAI1CU,MAAAA,KAAK,EAAEA,KAJmC;AAK1CS,MAAAA,QAAQ,EAAEN,IALgC;AAM1CV,MAAAA,OAAO,EAAEA,OANiC;AAO1CC,MAAAA,IAAI,EAAEL,MAAM,CAACK,IAP6B;AAQ1CgB,MAAAA,MAAM,EAAErB,MAAM,CAACqB,MAR2B;AAS1C,wBAAkBrB,MAAM,CAAC,gBAAD;AATkB,KAAnC,CAAT;AAWD,GAhBD,MAgBO;AACLgB,IAAAA,MAAM,GAAGvB,KAAK,CAACyB,aAAN,CAAoBvB,cAApB,EAAoC;AAC3CQ,MAAAA,SAAS,EAAEA,SADgC;AAE3CmB,MAAAA,IAAI,EAAE,GAFqC;AAG3CH,MAAAA,UAAU,EAAE,CAAClB,OAH8B;AAI3CU,MAAAA,KAAK,EAAEA,KAJoC;AAK3CS,MAAAA,QAAQ,EAAEN,IALiC;AAM3CV,MAAAA,OAAO,EAAEA,OANkC;AAO3CC,MAAAA,IAAI,EAAEL,MAAM,CAACK,IAP8B;AAQ3CgB,MAAAA,MAAM,EAAErB,MAAM,CAACqB,MAR4B;AAS3C,wBAAkBrB,MAAM,CAAC,gBAAD,CATmB;AAU3CuB,MAAAA,KAAK,EAAE;AAVoC,KAApC,EAWNvB,MAAM,CAACQ,IAXD,CAAT;AAYD;;AAED,SAAOP,OAAO,IAAID,MAAM,CAACwB,WAAlB,GAAgC/B,KAAK,CAACyB,aAAN,CAAoBrB,UAApB,EAAgC;AACrE4B,IAAAA,OAAO,EAAEzB,MAAM,CAACwB,WADqD;AAErEE,IAAAA,KAAK,EAAE;AAF8D,GAAhC,EAGpCV,MAHoC,CAAhC,GAGMA,MAHb;AAID,CAhEM","sourcesContent":["import React from 'react';\nimport { isString } from '../../services/predicate';\nimport { EuiButtonEmpty, EuiButtonIcon } from '../button';\nimport { EuiToolTip } from '../tool_tip';\n// In order to use generics with an arrow function inside a .tsx file, it's necessary to use\n// this `extends` hack and declare the types as shown, instead of declaring the const as a\n// FunctionComponent\nexport var DefaultItemAction = function DefaultItemAction(_ref) {\n  var action = _ref.action,\n      enabled = _ref.enabled,\n      item = _ref.item,\n      className = _ref.className;\n\n  if (!action.onClick && !action.href) {\n    throw new Error(\"Cannot render item action [\".concat(action.name, \"]. Missing required 'onClick' callback\\n      or 'href' string. If you want to provide a custom action control, make sure to define the 'render' callback\"));\n  }\n\n  var onClick = action.onClick ? function () {\n    return action.onClick(item);\n  } : undefined;\n\n  var resolveActionColor = function resolveActionColor(action) {\n    return isString(action.color) ? action.color : action.color(item);\n  };\n\n  var color = action.color ? resolveActionColor(action) : 'primary';\n  var _ref2 = action,\n      buttonIcon = _ref2.icon;\n\n  var resolveActionIcon = function resolveActionIcon(action) {\n    return isString(action.icon) ? action.icon : action.icon(item);\n  };\n\n  var icon = buttonIcon ? resolveActionIcon(action) : undefined;\n  var button;\n\n  if (action.type === 'icon') {\n    if (!icon) {\n      throw new Error(\"Cannot render item action [\".concat(action.name, \"]. It is configured to render as an icon but no\\n      icon is provided. Make sure to set the 'icon' property of the action\"));\n    }\n\n    button = React.createElement(EuiButtonIcon, {\n      className: className,\n      \"aria-label\": action.name,\n      isDisabled: !enabled,\n      color: color,\n      iconType: icon,\n      onClick: onClick,\n      href: action.href,\n      target: action.target,\n      \"data-test-subj\": action['data-test-subj']\n    });\n  } else {\n    button = React.createElement(EuiButtonEmpty, {\n      className: className,\n      size: \"s\",\n      isDisabled: !enabled,\n      color: color,\n      iconType: icon,\n      onClick: onClick,\n      href: action.href,\n      target: action.target,\n      \"data-test-subj\": action['data-test-subj'],\n      flush: \"right\"\n    }, action.name);\n  }\n\n  return enabled && action.description ? React.createElement(EuiToolTip, {\n    content: action.description,\n    delay: \"long\"\n  }, button) : button;\n};"]},"metadata":{},"sourceType":"module"}