{"ast":null,"code":"import uuid from 'uuid';\n/**\n * This function returns a function to generate ids.\n * This can be used to generate unique, but predictable ids to pair labels\n * with their inputs. It takes an optional prefix as a parameter. If you don't\n * specify it, it generates a random id prefix. If you specify a custom prefix\n * it should begin with an letter to be HTML4 compliant.\n */\n\nexport function htmlIdGenerator(idPrefix) {\n  var prefix = idPrefix || \"i\".concat(uuid.v1());\n  return function (suffix) {\n    return \"\".concat(prefix, \"_\").concat(suffix || uuid.v1());\n  };\n}","map":{"version":3,"sources":["/home/ad.rapidops.com/jaymin.shah/project/demostruct/node_modules/@elastic/eui/es/services/accessibility/html_id_generator.js"],"names":["uuid","htmlIdGenerator","idPrefix","prefix","concat","v1","suffix"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA;;;;;;;;AAQA,OAAO,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AACxC,MAAIC,MAAM,GAAGD,QAAQ,IAAI,IAAIE,MAAJ,CAAWJ,IAAI,CAACK,EAAL,EAAX,CAAzB;AACA,SAAO,UAAUC,MAAV,EAAkB;AACvB,WAAO,GAAGF,MAAH,CAAUD,MAAV,EAAkB,GAAlB,EAAuBC,MAAvB,CAA8BE,MAAM,IAAIN,IAAI,CAACK,EAAL,EAAxC,CAAP;AACD,GAFD;AAGD","sourcesContent":["import uuid from 'uuid';\n/**\n * This function returns a function to generate ids.\n * This can be used to generate unique, but predictable ids to pair labels\n * with their inputs. It takes an optional prefix as a parameter. If you don't\n * specify it, it generates a random id prefix. If you specify a custom prefix\n * it should begin with an letter to be HTML4 compliant.\n */\n\nexport function htmlIdGenerator(idPrefix) {\n  var prefix = idPrefix || \"i\".concat(uuid.v1());\n  return function (suffix) {\n    return \"\".concat(prefix, \"_\").concat(suffix || uuid.v1());\n  };\n}"]},"metadata":{},"sourceType":"module"}