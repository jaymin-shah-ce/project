"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EuiComboBoxPill = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _badge = require("../../badge");

var _i18n = require("../../i18n");

var EuiComboBoxPill =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(EuiComboBoxPill, _Component);

  function EuiComboBoxPill() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, EuiComboBoxPill);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(EuiComboBoxPill)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onCloseButtonClick", function () {
      var _this$props = _this.props,
          onClose = _this$props.onClose,
          option = _this$props.option;
      onClose(option);
    });
    return _this;
  }

  (0, _createClass2.default)(EuiComboBoxPill, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props2 = this.props,
          children = _this$props2.children,
          className = _this$props2.className,
          option = _this$props2.option,
          onClose = _this$props2.onClose,
          color = _this$props2.color,
          onClick = _this$props2.onClick,
          onClickAriaLabel = _this$props2.onClickAriaLabel,
          asPlainText = _this$props2.asPlainText,
          rest = (0, _objectWithoutProperties2.default)(_this$props2, ["children", "className", "option", "onClose", "color", "onClick", "onClickAriaLabel", "asPlainText"]);
      var classes = (0, _classnames.default)('euiComboBoxPill', {
        'euiComboBoxPill--plainText': asPlainText
      }, className);

      if (onClose) {
        return _react.default.createElement(_i18n.EuiI18n, {
          token: "euiComboBoxPill.removeSelection",
          default: "Remove {children} from selection in this group",
          values: {
            children: children
          }
        }, function (removeSelection) {
          return _react.default.createElement(_badge.EuiBadge, (0, _extends2.default)({
            className: classes,
            title: children,
            iconOnClick: _this2.onCloseButtonClick,
            iconOnClickAriaLabel: removeSelection,
            iconType: "cross",
            iconSide: "right",
            color: color,
            closeButtonProps: {
              tabIndex: '-1'
            },
            onClick: onClick,
            onClickAriaLabel: onClickAriaLabel
          }, rest), children);
        });
      }

      if (asPlainText) {
        return _react.default.createElement("span", (0, _extends2.default)({
          className: classes
        }, rest), children);
      }

      return _react.default.createElement(_badge.EuiBadge, (0, _extends2.default)({
        className: classes,
        title: children,
        color: color
      }, rest, {
        onClick: onClick,
        onClickAriaLabel: onClickAriaLabel
      }), children);
    }
  }]);
  return EuiComboBoxPill;
}(_react.Component);

exports.EuiComboBoxPill = EuiComboBoxPill;
(0, _defineProperty2.default)(EuiComboBoxPill, "propTypes", {
  option: _propTypes.default.object.isRequired,
  children: _propTypes.default.string,
  className: _propTypes.default.string,
  color: _propTypes.default.string,
  onClose: _propTypes.default.func,
  asPlainText: _propTypes.default.bool,
  onClick: _propTypes.default.func,
  onClickAriaLabel: _propTypes.default.string
});
(0, _defineProperty2.default)(EuiComboBoxPill, "defaultProps", {
  color: 'hollow'
});
EuiComboBoxPill.__docgenInfo = {
  "description": "",
  "methods": [{
    "name": "onCloseButtonClick",
    "docblock": null,
    "modifiers": [],
    "params": [],
    "returns": null
  }],
  "displayName": "EuiComboBoxPill",
  "props": {
    "color": {
      "defaultValue": {
        "value": "'hollow'",
        "computed": false
      },
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "option": {
      "type": {
        "name": "object"
      },
      "required": true,
      "description": ""
    },
    "children": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "onClose": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": ""
    },
    "asPlainText": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": ""
    },
    "onClick": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": ""
    },
    "onClickAriaLabel": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    }
  }
};